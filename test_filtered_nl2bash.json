{"invocation":"Search for command \"tail\" in the maps of the process with PID 2671","cmd":"cat \/proc\/2671\/maps | grep `which tail`","cmdset":["which","cat","grep"],"cmdcath":["TXTPROC","HELPDOC"]}
{"invocation":"Display all lines containing UTRACE in the current kernel's compile-time config file.","cmd":"grep UTRACE \/boot\/config-$(uname -r)","cmdset":["grep","uname"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Abort the shell or script on the first failed command","cmd":"set -e","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Add directory \"$HOME\/Pictures\" to the directory stack","cmd":"pushd \"$HOME\/Pictures\"","cmdset":["pushd"],"cmdcath":["FDOPS"]}
{"invocation":"Answer \"y\" to all prompts of \"rm -rf foo\"","cmd":"yes | rm -ri foo","cmdset":["rm","yes"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Append the current date to variable 'LBUFFER'","cmd":"LBUFFER+=\"$(date)\"","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"Archive \"\/path\/to\/files\/source\" to \"user@remoteip:\/path\/to\/files\/destination\" via ssh on port 2121","cmd":"rsync -azP -e \"ssh -p 2121\" \/path\/to\/files\/source user@remoteip:\/path\/to\/files\/destination","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive \"\/top\/a\/b\/c\/d\" to host \"remote\" using relative path names","cmd":"rsync -a --relative \/top\/a\/b\/c\/d remote:\/","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive \"_vimrc\" to \"~\/.vimrc\" suppressing non-error messages and compressing data during transmission","cmd":"rsync -aqz _vimrc ~\/.vimrc","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive \"directory\" preserving hard links from host \"remote\" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made","cmd":"rsync -aPSHiv remote:directory .","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive \"src\" to \"dst\" without overwriting existing files in \"dst\"","cmd":"rsync -a -v --ignore-existing src dst","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive \"src-dir\" to \"dest-dir\" on \"remote-user@remote-host\" and delete any files in \"dest-dir\" not found in \"src-dir\"","cmd":"rsync -av --delete src-dir remote-user@remote-host:dest-dir","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive all \".txt\" files in the current directory to \"\/path\/to\/dest\" keeping partially transferred files","cmd":"rsync -aP --include=*\/ --include=*.txt --exclude=* . \/path\/to\/dest","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive all filepattern-*2009* files\/directories under data\/ into 2009.tar","cmd":"find data\/ -name 'filepattern-*2009*' -exec tar uf 2009.tar '{}' +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Archive all filepattern-*2009* files\/directories under data\/ into 2009.tar","cmd":"find data\/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Archive directory \"tata\" to directory \"tata2\", compressing data during copy.","cmd":"rsync -avz tata\/ tata2\/","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen","cmd":"bzip2 -c file | tee -a logfile","cmdset":["bzip2","tee"],"cmdcath":["SHUTIL","ARCH"]}
{"invocation":"Archive preserving permissions and ownership files in \"\/var\/www\/\" on host \"user@10.1.1.2\" to local \"\/var\/www\/\"","cmd":"sudo rsync -az user@10.1.1.2:\/var\/www\/ \/var\/www\/","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Archive showing progress \"sourcefolder\" to \"\/destinationfolder\" excluding \"thefoldertoexclude\"","cmd":"rsync -av --progress sourcefolder \/destinationfolder --exclude thefoldertoexclude","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Attempt to connect as root to localhost and copy \/home\/reportuser\/dailyReport.doc to directory \/root\/dailyReports\/20150105\/ - this will normally fail because ssh won't accept root connections by default.","cmd":"scp -p \/home\/reportuser\/dailyReport.doc root@localhost:\/root\/dailyReports\/20150105\/","cmdset":["scp"],"cmdcath":["NET"]}
{"invocation":"Attempt to connect as root via ssh to host \"IP\" and copy \/root\/K to local machine, passing option \"StrictHostKeyChecking=no\" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.","cmd":"scp -o StrictHostKeyChecking=no root@IP:\/root\/K","cmdset":["scp"],"cmdcath":["NET"]}
{"invocation":"Back up all *.txt files\/directories in new files\/directories with a .bak extension in their names under \/etc directory","cmd":"find \/etc -name \"*.txt\" | xargs -I {} mv {} {}.bak","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Calculate md5 checksum of the list of all files\/dirs in \/path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in \/tmp\/file","cmd":"ls -alR -I dev -I run -I sys -I tmp -I proc \/path | md5sum -c \/tmp\/file","cmdset":["ls","md5sum"],"cmdcath":["SYSINFO","FDOPS"]}
{"invocation":"Calculate the md5 sum of all files in \"\/your\/dir\" including content and filenames and following symbolic links","cmd":"grep -aR -e . \/your\/dir | md5sum | cut -c-32","cmdset":["grep","md5sum","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Calculate the md5 sum of every \".py\" file in directory tree \"\/path\"","cmd":"find \/path -type f -name \"*.py\" -exec md5sum \"{}\" +;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Calculate the md5 sum of the file \"filename\" and print only the hash","cmd":"md5sum filename |cut -f 1 -d \" \"","cmdset":["md5sum","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Calculate the md5 sum of the list of files in the current directory","cmd":"find . -maxdepth 1 -type f | md5sum","cmdset":["find","md5sum"],"cmdcath":["SYSINFO","FDOPS"]}
{"invocation":"Calculate the md5sum of the executable file of command \"gcc\"","cmd":"md5sum $(which gcc)","cmdset":["which","md5sum"],"cmdcath":["SYSINFO","HELPDOC"]}
{"invocation":"Case-insensitive search all existing environment variables and their values for \"shell\".","cmd":"env | grep -i shell","cmdset":["grep","env"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Change onwer to \"root\" and group to \"wheel\" of \"com.xxxx.adbind.plist\"","cmd":"sudo chown root:wheel com.xxxx.adbind.plist","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Change permissions for all PHP files under the current directory tree to 755","cmd":"find . -name \"*.php\" -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change permissions of \".git\/hooks\/prepare-commit-msg\" to 777","cmd":"sudo chmod 777 .git\/hooks\/prepare-commit-msg","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Change permissions of all regular files in the ~\/dir_data directory tree in accordance with mode `a-x,u+w'","cmd":"find ~\/dir_data -type f -exec chmod a-x,u+w {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change permissions to 644 recursively only for files","cmd":"find . -type f -exec chmod 644 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change permissions to 755 for all subdirectories of the current directory","cmd":"find . -type d -print | sed -e 's\/^\/\"\/' -e 's\/$\/\"\/' | xargs chmod 755","cmdset":["sed","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Change permissions to 755 recursively only for directories","cmd":"find . -type d -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change the owner of all \".txt\" files in directory tree \"\/mydir\" to \"root\"","cmd":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change the ownership of all files in the current directory tree to myuser:a-common-group-name","cmd":"find . -exec chown myuser:a-common-group-name {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change the permission of all regular files under current directory tree to 644","cmd":"find . -type f -exec chmod 644 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change the permission to 0755 for all directories under current directory","cmd":"find . -type d -exec chmod 0755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change the permissions of the current directory and all its subdirectories to 755.","cmd":"find . -type d -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Change to directory listed in file '$HOME\/.lastdir'","cmd":"cd `cat $HOME\/.lastdir`","cmdset":["cat","cd"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Changes group ownership of 'logdir' to 'loggroup'.","cmd":"chgrp loggroup logdir","cmdset":["chgrp"],"cmdcath":["SECOP"]}
{"invocation":"Changes group ownership of 'public' and 'private' to 'god'.","cmd":"chgrp god public private","cmdset":["chgrp"],"cmdcath":["SECOP"]}
{"invocation":"Changes to the directory where 'ssh' executable is located.","cmd":"cd $(dirname $(which ssh));","cmdset":["which","cd","dirname"],"cmdcath":["HELPDOC","FDOPS"]}
{"invocation":"Check if $path_in_question is mount point of filesystem","cmd":"df $path_in_question | grep \" $path_in_question$\"","cmdset":["df","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.","cmd":"is_nullglob=$( shopt -s | egrep -i '*nullglob' )","cmdset":["egrep","shopt"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Check if a drive is mounted to nfs","cmd":"mount |grep nfs","cmdset":["mount","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Check if content of all top-level *.txt files in the current directory contain only unique lines","cmd":"cat *.txt | sort | sort -u -c","cmdset":["sort","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Check if current system is running in 64-bit addressing.","cmd":"uname -m | grep '64'","cmdset":["grep","uname"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Check whether \"$path_in_question\" is a mount point","cmd":"df $path_in_question | grep \" $path_in_question$\"","cmdset":["df","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Clean directories and subdirectories of the temporary files generated during normal use","cmd":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Clean the current directory from all subversion directories recursively","cmd":"find . -type d -name \".svn\" -print | xargs rm -rf","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Clear the in-memory history","cmd":"history -c","cmdset":["history"],"cmdcath":["SYSINFO"]}
{"invocation":"Clear the terminal's search history","cmd":"history -c","cmdset":["history"],"cmdcath":["SYSINFO"]}
{"invocation":"Collapse double slashes in variable \"dir\" into a single one.","cmd":"dir=\"`echo $dir | sed s,\/\/,\/,g`\"","cmdset":["sed","echo"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Compare \"file1\" and \"file2\" line by line with 3 lines of unified context","cmd":"diff -u file1 file2","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Compare *.csv files in the current directory tree with their analogs stored in \/some\/other\/path\/ prompting before running `diff'","cmd":"find . -okdir diff {} \/some\/other\/path\/{} \";\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Compare files in \"\/tmp\/dir1\" and \"\/tmp\/dir2\", treating absent files as empty and all files as text","cmd":"diff -Nar \/tmp\/dir1 \/tmp\/dir2\/","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones","cmd":"comm <(sort f1.txt) <(sort f2.txt)","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Compress from standard input and print the byte count preceded with 'gzip.'","cmd":"echo gzip. $( gzip | wc -c )","cmdset":["wc","gzip","echo"],"cmdcath":["SHUTIL","TXTPROC","ARCH"]}
{"invocation":"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","cmd":"find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Connect to host \"${HOSTNAME}\" as user \"${USERNAME}\" and execute \"${SCRIPT}\" non-interactively","cmd":"ssh -l ${USERNAME} ${HOSTNAME} \"${SCRIPT}\"","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Connect to host 'hostname' as user 'username' by forcing host key confirmation","cmd":"ssh -o UserKnownHostsFile=\/dev\/null username@hostname","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Continuously send ping requests to broadcast address \"10.10.0.255\" and print the IP addresses who respond","cmd":"ping -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }'","cmdset":["ping","grep","awk"],"cmdcath":["NET","TXTPROC"]}
{"invocation":"Convert \"abc\" to a string of hexadecimal bytes","cmd":"echo abc | od -A n -v -t x1 | tr -d ' \\n'","cmdset":["echo","od","tr"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Convert Unix `cal` output to latex table code.","cmd":"cal -h 02 2012| cut -c4-17 | sed -r 's\/(..)\\s\/\\0\\t\\&\/g' | sed 's\/$\/\\t\\\\\\\\\/' | head -n-1 | tail -n +2","cmdset":["sed","head","cal","tail","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Convert Unix `cal` output to latex table code.","cmd":"cal | sed '1d;2{h;s\/.\/ \/g;x};\/^\\s*$\/b;G;s\/\\n\/ \/;s\/^...\\(.\\{15\\}\\).*\/\\1\/;s\/...\/ &\\t\\&\/g;s\/\\&$\/\\\\\\\\\/'","cmdset":["cal","sed"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Copies all files like \"*foo*\" under the current directory to the '\/your\/dest' directory.","cmd":"find . -name \"*foo*\" | sed -e \"s\/'\/\\\\\\'\/g\" -e 's\/\"\/\\\\\"\/g' -e 's\/ \/\\\\ \/g' | xargs cp \/your\/dest","cmdset":["sed","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Copies all files like '*.txt' under the current directory to the '.\/tmp\/' directory.","cmd":"find . -type f -name '*.txt' | sed 's\/'\"'\"'\/\\'\"'\"'\/g' | sed 's\/.*\/\"&\"\/'  | xargs -I{} cp -v {} .\/tmp\/","cmdset":["sed","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Copies all files like 'lib*.so' to '~\/usr\/gtest\/lib\/' directory.","cmd":"cp lib*.so ~\/usr\/gtest\/lib","cmdset":["cp"],"cmdcath":["FDOPS"]}
{"invocation":"Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.","cmd":"find . -mindepth 1 -maxdepth 1 -type d| grep \\\/a |xargs -n 1 cp -i index.html","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Copy *.mp3 files to \/tmp\/MusicFiles","cmd":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Copy a file xyz.c to all the .c files present in the C directory and below","cmd":"find .\/C -name \"*.c\" | xargs -n1  cp xyz.c","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Copy all \".php\" files in \"projects\/\" directory tree to \"copy\/\" preserving directory hierarchy","cmd":"find projects\/ -name '*.php' -print | cpio -pdm copy\/","cmdset":["cpio","find"],"cmdcath":["FDOPS","ARCH"]}
{"invocation":"Copy all \".xml\" files in the current directory tree to \"\/new\/parent\/dir\" preserving the directory hierarchy","cmd":"find . -name \\*.xml -print0 | cpio -pamvd0 \/new\/parent\/dir","cmdset":["cpio","find"],"cmdcath":["FDOPS","ARCH"]}
{"invocation":"Copy all *.mp3 files under the current directory to \/tmp\/MusicFiles\/","cmd":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Copy all .pdf files in the .\/work\/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the .\/backup\/ directory","cmd":"find .\/work\/ -type f -name \"*.pdf\" -mtime +5 -size +2M  | xargs -r cp -t .\/backup\/","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Copy all files ending in \".a\" in directory trees matching \"folder*\" to \"\/path\/to\/dest\" preserving directory hierarchy","cmd":"find folder* -name '*.a' -print | cpio -pvd \/path\/to\/dest","cmdset":["cpio","find"],"cmdcath":["FDOPS","ARCH"]}
{"invocation":"Copy directory structure from directory 'olddir' to 'newdir'","cmd":"find olddir -type d -printf \"newdir\/%P\\0\" | xargs -0 mkdir -p","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Copy file \"exist\" from directory \"\/file\/that\" to a new file named \"file\" in \"\/location\/for\/new\"","cmd":"cp \/file\/that\/exists \/location\/for\/new\/file","cmdset":["cp"],"cmdcath":["FDOPS"]}
{"invocation":"Copy file or folder linked to by \"file\" to \"file\"","cmd":"cp -rf --remove-destination `readlink file` file","cmdset":["cp","readlink"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Copy the directory hierarchy from \"original\" to \"new\"","cmd":"find original -type d -exec mkdir new\/{} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Copy the owner and group of \"oldfile\" to \"newfile\"","cmd":"chown --reference=oldfile newfile","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Correct permissions for directories in the web directory","cmd":"find \/your\/webdir\/ -type d -print0 | xargs -0 chmod 755","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Count files accessed more than a month ago","cmd":"find . -atime +30 -exec ls \\; | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days","cmd":"find \"$DIR_TO_CLEAN\" -mtime +$DAYS_TO_SAVE | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of .gz files in directory tree \/home\/user1\/data1\/2012\/mainDir","cmd":"find \/home\/user1\/data1\/2012\/mainDir -name '*.gz' | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of equal lines in sorted files \"ignore.txt\" and \"input.txt\"","cmd":"comm -12 ignore.txt input.txt | wc -l","cmdset":["comm","wc"],"cmdcath":["TXTPROC"]}
{"invocation":"Count the number of files in the directory trees whose pathnames match pattern '\/dev\/sd*[a-z]'","cmd":"find \/dev\/sd*[a-z] | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of regular files in the current directory that contain a vowel in their names","cmd":"find . -maxdepth 1 -type f -iname '*[aeiouy]*' -printf \".\\n\" | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of regular files in the current directory tree","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of total files and folders under current directory tree","cmd":"find . -print0 | tr -cd '\\0' | wc -c","cmdset":["wc","tr","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Count the number of users logged in minus one","cmd":"who | sed 1d | wc -l","cmdset":["who","wc","sed"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Counts all *.mod files in a \/boot\/grub\/ folder.","cmd":"ls -l \/boot\/grub\/*.mod | wc -l","cmdset":["wc","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Counts all files in a DIR_NAME folder and subfolders.","cmd":"find DIR_NAME -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Counts all files in a current folder and subfolders.","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Counts lines in each *.php file.","cmd":"wc -l `find . -name \"*.php\"`","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Counts lines in file $file and prints number only.","cmd":"wc -l $file | awk '{print $1}';","cmdset":["wc","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Counts lines in file $file ignoring '\/\/' commented lines, lines with spaces only and empty lines.","cmd":"cat $file | sed '\/\\\/\\\/\/d' | sed '\/^\\s*$\/d' | wc -l","cmdset":["sed","wc","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Counts the number of lines in *.php and *.inc files in a current folder and subfolders.","cmd":"find . -name '*.php' -o -name '*.inc' | xargs wc -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","cmd":"tar -czvf my_directory.tar.gz -C my_directory .","cmdset":["tar"],"cmdcath":["ARCH"]}
{"invocation":"Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.","cmd":"find . -mindepth 1 -maxdepth 1 -type d| grep \\\/a |xargs -n 1 cp -i index.html","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Create a gzip archive file ($tarFile) of all *.log files under $sourcePath","cmd":"find $sourcePath -type f -name \"*.log\" -exec tar -uvf $tarFile {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Create a rsa key of 2048 bits with comment \"michael\" and store it in file \"key\".","cmd":"ssh-keygen -b 2048 -t rsa -f key -C michael","cmdset":["ssh-keygen"],"cmdcath":["NET"]}
{"invocation":"Create a ssh key and store it in the file ~\/.ssh\/apache-rsync","cmd":"ssh-keygen -f ~\/.ssh\/apache-rsync","cmdset":["ssh-keygen"],"cmdcath":["NET"]}
{"invocation":"Create a symbolc link named \"latest\" to the last modified file or directory in \"target-directory\"","cmd":"ln -s target-directory\/`ls -rt target-directory | tail -n1` latest","cmdset":["ln","tail","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Create a symbolic link in target directory \"$tmpdir\" for each file under the current directory","cmd":"find $PWD -type f -exec ln -st $tmpdir {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Create a symbolic link in the current directory for each .jpg file under \"dir\"","cmd":"ln -s \"$(find dir -name '*.jpg')\" .","cmdset":["ln","find"],"cmdcath":["FDOPS"]}
{"invocation":"Create a symbolic link in the current directory to \"..\/config\/init\"","cmd":"ln -s \"..\/config\/init\"","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"Create directorie(s) 'some\/path' as required in the current directory","cmd":"mkdir -p .\/some\/path","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Create directories \"\/tmp\/x\/y\/z\/\" on remote host before copying \"$source\" to \"user@remote:\/tmp\/x\/y\/z\/\"","cmd":"rsync -a --rsync-path=\"mkdir -p \/tmp\/x\/y\/z\/ && rsync\" $source user@remote:\/tmp\/x\/y\/z\/","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"","cmd":"echo -e \"$correctFilePathAndName\" | xargs touch","cmdset":["echo","xargs"],"cmdcath":["SHUTIL"]}
{"invocation":"Create hard links of all files and directories matching \"test\/icecream\/cupcake\/*\" or \"test\/mtndew\/livewire\/*\" in \"test-keep\" preserving directory hierarchy","cmd":"find test -path 'test\/icecream\/cupcake\/*' -o -path 'test\/mtndew\/livewire\/*' | cpio -padluv test-keep","cmdset":["cpio","find"],"cmdcath":["FDOPS","ARCH"]}
{"invocation":"Create intermediate directories \"b and \"c\" as required and directory \"c\"","cmd":"mkdir -p a\/b\/c","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Create intermediate directories as required and directory  \/my\/other\/path\/here","cmd":"mkdir -p \/my\/other\/path\/here","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Create intermediate directories ~\/foo\/bar\/ as required and directories baz, bif, bang","cmd":"mkdir -p ~\/foo\/bar\/baz ~\/foo\/bar\/bif ~\/foo\/boo\/bang","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command","cmd":"cat <(fgrep -i -v \"$command\" <(crontab -u test -l)) <(echo \"$job\") | crontab -u test -","cmdset":["cat","crontab"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Create new crontab set including $job and only jobs from current crontab that don`t contain $command","cmd":"cat <(fgrep -i -v \"$command\" <(crontab -l)) <(echo \"$job\") | crontab -","cmdset":["cat","crontab"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Create symbolic links in current directory for all files located in \"dir\" directory and have filename extension \"jpg\"","cmd":"find dir -name '*.jpg' -exec ln -s \"{}\" \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Create tar archive \"dirall.tar\" and copy all files from directory tree \/tmp\/a1 to it","cmd":"find \/tmp\/a1 -exec tar -rvf dirall.tar {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Create tar archive \"foo.tar\" and copy all files from directory tree \/tmp\/a1 to it","cmd":"find \/tmp\/a1 | xargs tar cvf foo.tar","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Creates temporary directory in '\/tmp\/' folder and saves path to it in 'my_tmp_dir' variable.","cmd":"my_tmp_dir=$(mktemp -d --tmpdir=\/tmp)","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Creates temporary directory with name formatted like .daemonXXXXXXX in \/tmp\/ folder, and saves path to it in 'TMPDIR' variable.","cmd":"TMPDIR=$(mktemp -p \/tmp -d .daemonXXXXXXX)","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Creates temporary file and saves path to it in a 'tmpfile' variable.","cmd":"tmpfile=$(mktemp)","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Creates temporary file and saves path to it in a 'tmpfile' variable.","cmd":"tmpfile=`mktemp`","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Creates temporary folder relative to directory '\/path\/to\/dir'.","cmd":"mktemp -d -p \/path\/to\/dir","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http:\/\/example.com","cmd":"sed -n 's;\\(http:\/\/[^\/]*\\)\/.*;\\1;p'","cmdset":["sed"],"cmdcath":["TXTPROC"]}
{"invocation":"Decompress \"\/file\/address\/file.tar.gz\" to standard output","cmd":"gzip -dc \/file\/address\/file.tar.gz","cmdset":["gzip"],"cmdcath":["ARCH"]}
{"invocation":"Decompress \"file2.txt\" and \"file1.txt\" and print lines in \"file1.txt\" that match the 5th tab separated field in \"file2.txt\"","cmd":"awk -F'\\t' 'NR==FNR{a[$5];next} $5 in a' <(zcat file2.txt) <(zcat file1.txt)","cmdset":["awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Decompress \"path\/to\/test\/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 line limit","cmd":"gzip -dc path\/to\/test\/file.gz | grep -P --regexp='my regex' | split -l1000000","cmdset":["gzip","grep","split"],"cmdcath":["SHUTIL","TXTPROC","ARCH"]}
{"invocation":"Delete all HTML files under tree ~\/mydir","cmd":"find ~\/mydir -iname '*.htm' -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all __temp__* files\/directories under current directory tree","cmd":"find . -depth -name '__temp__*' -exec rm -rf '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all broken symbolic links under '\/usr\/ports\/packages' directory tree","cmd":"find -L \/usr\/ports\/packages -type l -exec rm -- {}\t+","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory excluding other partitions","cmd":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '\/.\/d' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory excluding other partitions","cmd":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -q \"{}\" \\; -print0 | xargs -0 sed '\/.\/d'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Delete all empty directories in minimum 1 level down the directory 'directory'","cmd":"find directory -mindepth 1 -type d -empty -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all empty subdirectories in and below directory\/","cmd":"find directory -mindepth 1 -type d -empty -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all filename* files under \/dir directory","cmd":"find \/dir -name \"filename*\" -type f -print | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Delete all files (files, directories, links, pipes...) named 'core' under current directory","cmd":"find . -name \"core\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files and directories","cmd":"find -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files beneath the current directory that begin with the letters 'Foo'.","cmd":"find . -type f -name \"Foo*\" -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files in directory $DIR that have not been accessed in at least 5 days","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files in the $DIR directory that have not been accessed in 5 or more days.","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files in the \/myDir directory tree that were last modfied more than 7 days ago","cmd":"find \/myDir -mindepth 1 -mtime +7 -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files that were modified more than 60 days ago under '\/path-to-directory' tree","cmd":"find \/path-to-directory -mtime +60 -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files under $INTRANETDESTINATION\/weekly directory tree that were modified more than 32 days ago","cmd":"find $INTRANETDESTINATION\/weekly -mtime +32 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files under and below the current directory","cmd":"find -mindepth 1 -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files with '.old' extension under current directory tree","cmd":"find . -name \"*.old\" -print | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Delete all files\/directories named 'file' under current directory tree","cmd":"find -name file -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files\/directories named 'sample' (case insensitive) under '\/home\/user\/Series\/' directory tree as super user","cmd":"sudo find \/home\/user\/Series\/ -iname sample -print0 | sudo xargs -0 rm -r","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Delete all files\/directories named test under maximum 2 level down the current directory","cmd":"find . -maxdepth 2 -name \"test\" -exec rm -rf {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files\/directories under current directory","cmd":"find -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all files\/directories under current directory tree excluding '.gitignore' files\/directories and files\/directories matching the patterns '.git' or '.git\/*' in their paths","cmd":"find . ! -name '.gitignore' ! -path '.git' ! -path '.git\/*' -exec rm -rf {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all hidden files\/directories under $some_directory","cmd":"find \"$some_directory\" -name '.*' ! -name '.' ! -name '..' -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all lines matching \"pattern\" in \"filename\"","cmd":"sed -i '\/pattern\/d' filename","cmdset":["sed"],"cmdcath":["TXTPROC"]}
{"invocation":"Delete all regular files that have not been modified in the last 31 days under '\/path\/to\/junk\/files' directory tree","cmd":"find \/path\/to\/junk\/files -type f -mtime +31 -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delete all regular files under current directory","cmd":"find . -type f -print0 | xargs -0 \/bin\/rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Delete current cron job list, and use those in yourFile.text","cmd":"crontab yourFile.text","cmdset":["crontab"],"cmdcath":["SHUTIL"]}
{"invocation":"Delete files containing whitespaces without recursion","cmd":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Delimit standard input with \":\" and display as a table","cmd":"column -s: -t","cmdset":["column"],"cmdcath":["TXTPROC"]}
{"invocation":"Determine if user \"$USER\" is logged in","cmd":"who | grep $USER","cmdset":["who","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Disables shell option 'nocasematch'.","cmd":"shopt -u nocasematch","cmdset":["shopt"],"cmdcath":["SYSINFO"]}
{"invocation":"Display a long listing of all regular files that are less than 50 bytes in size under '\/usr\/bin' directory tree","cmd":"find \/usr\/bin -type f -size -50c -exec ls -l '{}' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.","cmd":"set | more","cmdset":["set","more"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Display all files in a folder","cmd":"find man5 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Display all variables with names starting with \"derby\" in a Window's command line","cmd":"set derby","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Display bash function definition of \"foobar\"","cmd":"set | sed -n '\/^foobar ()\/,\/^}\/p'","cmdset":["sed","set"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Display compter's hostname","cmd":"echo `uname -a | awk '{print $2}'`","cmdset":["echo","awk","uname"],"cmdcath":["SYSINFO","SHUTIL","TXTPROC"]}
{"invocation":"Display differences between \/destination\/dir\/1 and \/destination\/dir\/2 excluding XML files.","cmd":"diff \/destination\/dir\/1 \/destination\/dir\/2 -r -x *.xml","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Display differences between directories dir1 and dir2.","cmd":"diff -r dir1 dir2","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Display differences between file1 and file2 side-by-side.","cmd":"diff -y file1 file2","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Display hostname.","cmd":"uname -n","cmdset":["uname"],"cmdcath":["SYSINFO"]}
{"invocation":"Display human-readable file type description of ascii.txt","cmd":"file ascii.txt","cmdset":["file"],"cmdcath":["SYSINFO"]}
{"invocation":"Display long listing of all the files\/directories owned by the user 'me' under '\/tmp' directory tree","cmd":"find \/tmp -user me -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Display mime type of file specified by variable \"file\"","cmd":"file -ib \"$file\"","cmdset":["file"],"cmdcath":["SYSINFO"]}
{"invocation":"Display non-hidden files in the current directory with the given output format","cmd":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Display permissions, user, group, and full path for each file in the current directory tree as a list","cmd":"tree -p -u -g -f -i","cmdset":["tree"],"cmdcath":["FDOPS"]}
{"invocation":"Display source and mount point of the file system containing \/some\/path.","cmd":"df '\/some\/directory' | awk '{print $1, $6}'","cmdset":["df","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Display summary of each specified file in human readable form","cmd":"du -sh *","cmdset":["du"],"cmdcath":["SYSINFO"]}
{"invocation":"Display the 'bash' manpage, going to the first occurence of \\' sequence of characters.","cmd":"man bash | less -Ip \"\\\\\\'\"","cmdset":["man","less"],"cmdcath":["TXTPROC","HELPDOC"]}
{"invocation":"Display the count of regular files under 'home\/magie\/d2' directory tree which have execute permission to all the users","cmd":"find home\/magie\/d2 -type f -perm +111 | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Display the last dot-separated field, in this case \"com\".","cmd":"echo 'maps.google.com' | rev | cut -d'.' -f 1 | rev","cmdset":["rev","echo","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Display the named characters in \"line1\\r\\nline2\"","cmd":"echo -e \"line1\\r\\nline2\" | awk '{ print $0; }' | od -a","cmdset":["echo","od","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Display the sizes and filepaths of all files\/directories sorted in ascending order of size","cmd":"du -a --max-depth=1 | sort -n","cmdset":["du","sort"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Display variable 'var' without leading and trailing whitespace.","cmd":"echo $var | awk '{gsub(\/^ +| +$\/,\"\")}1'","cmdset":["echo","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Dump \"\/dev\/ttySomething\" in both hex and text","cmd":"od -t x1 -t a \/dev\/ttySomething","cmdset":["od"],"cmdcath":["TXTPROC"]}
{"invocation":"ERROR - this is for DOS","cmd":"ping -n 1 %ip% | find \"TTL\"","cmdset":["ping","find"],"cmdcath":["NET","FDOPS"]}
{"invocation":"Enables shell option 'autocd'.","cmd":"shopt -s autocd","cmdset":["shopt"],"cmdcath":["SYSINFO"]}
{"invocation":"Enables shell option 'histappend'.","cmd":"shopt -s histappend","cmdset":["shopt"],"cmdcath":["SYSINFO"]}
{"invocation":"Execute \"awk -F, '$1 ~ \/F$\/'\" on contents of \"file.gz\"","cmd":"zcat file.gz | awk -F, '$1 ~ \/F$\/'","cmdset":["awk","zcat"],"cmdcath":["TXTPROC","ARCH"]}
{"invocation":"Execute \"script.awk\" on \"file\" and format the output as a table","cmd":"awk -f script.awk file{,} | column -t","cmdset":["column","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Execute 'echo -e \"\\033[31mHello World\\033[0m\"' every without color support 2 seconds","cmd":"watch 'echo -e \"\\033[31mHello World\\033[0m\"'","cmdset":["watch"],"cmdcath":["SHUTIL"]}
{"invocation":"Execute command \"$cmd_str\" on host \"$SERVER\" as user \"$USER\"","cmd":"ssh \"$USER@$SERVER\" \"$cmd_str\"","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Execute python script \"test.py\" with \"LD_PRELOAD=.\/linebufferedstdout.so\" and write the output to console and append to \"test.out\"","cmd":"LD_PRELOAD=.\/linebufferedstdout.so python test.py | tee -a test.out","cmdset":["tee"],"cmdcath":["SHUTIL"]}
{"invocation":"Executes 'echo \"$ret\"' in a subshell that is opened by command 'true'.","cmd":"true | echo \"$ret\"","cmdset":["echo","true"],"cmdcath":["SHUTIL"]}
{"invocation":"Exit the shell immediately if an error is encountered","cmd":"set -e","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Exit the shell on the first error encountered","cmd":"set -e","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Extract and print hostname and protocol part from URL like \"http:\/\/www.suepearson.co.uk\/product\/174\/71\/3816\/\".","cmd":"echo \"http:\/\/www.suepearson.co.uk\/product\/174\/71\/3816\/\" | cut -d'\/' -f1-3","cmdset":["echo","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Extract any line in \"file1\" or \"file2\" which does not appear in the other","cmd":"comm -3 <(sort file1) <(sort file2)","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Extract files from archive 'archive.tar'","cmd":"cat archive.tar | tar x","cmdset":["cat","tar"],"cmdcath":["TXTPROC","ARCH"]}
{"invocation":"Extract number from $filename of the form \"something_12345_else\" and set the variable \"number\" to this number.","cmd":"number=$(echo $filename | awk -F _ '{ print $2 }')","cmdset":["echo","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Filters only directories including hidden ones from long file listing of a current directory, and prints their names.","cmd":"ls -Al | grep \"^d\" | awk -F\" \" '{print $9}'","cmdset":["grep","awk","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find \"file.xml\" under the current directory and change directory to its parent","cmd":"cd `find . -name file.xml -exec dirname {} \\;`","cmdset":["cd","find"],"cmdcath":["FDOPS"]}
{"invocation":"Find & Substitute Only 2nd Occurrence of a Word Using sed s\/\/2 in all .txt files","cmd":"find . -type f -name \"*.txt\" -exec sed 's\/Linux\/Linux-Unix\/2' thegeekstuff.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find *.c and *.h files under the current directory tree skipping hidden directories and files","cmd":"find . \\( -path '*\/.*' -prune -o ! -name '.*' \\) -a -name '*.[ch]'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find *.java files under current directory and compress them to myfile.tar","cmd":"find . -type f -name \"*.java\" | xargs    tar rvf myfile.tar","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find *.scm files recursively in the current directory","cmd":"find . -name '*.scm'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find *.txt files in the current directory tree, ignoring paths .\/Movies\/*, .\/Downloads\/*, and .\/Music\/*","cmd":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find .java files in the current directory tree that contain 'TODO', and print their pathnames","cmd":"find . -name \"*.java\" -exec grep -Hin TODO {} + | cut -d \":\" -f 1","cmdset":["find","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find .txt files on the system whose size is greater than 12000 bytes","cmd":"find \/ -name \"*.txt\" -size +12000c","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find a hostname that resolves to IP '173.194.33.71'","cmd":"dig +short -x 173.194.33.71","cmdset":["dig"],"cmdcath":["NET"]}
{"invocation":"Find all $1 files\/directories under current directory and enter into the parent directory of the first one found","cmd":"cd $(dirname $(find . -name $1 | sed 1q))","cmdset":["sed","cd","find","dirname"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all $2 files in $1 path and search for the regex expanded by $3 in those files","cmd":"find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all $tofind* files\/directories under $parentdir","cmd":"find $parentdir -name $tofind*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *$VERSION* files\/directories under current directory where $VERSION is a variable","cmd":"find . -name \"*$VERSION*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.c files located under \/home and below","cmd":"find \/home -name \"*.c\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.c files under \/home","cmd":"find \/home -name \"*.c\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.c files under and below the current directory that contain \"hogehoge\"","cmd":"find . -name \\*.c | xargs grep hogehoge","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","cmd":"find . -name \\*.c -exec grep wait_event_interruptible {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","cmd":"find . -name \\*.c -print | xargs grep wait_event_interruptible \/dev\/null","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all *.cgi files\/directories under current directory and change their permission to 755","cmd":"find . -name '*.cgi' -print0 | xargs -0 chmod 755","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all *.cls files\/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' for each of them where $0 is expanded to the file\/directory path","cmd":"find . -iname \"*.cls\" -exec echo '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.dbf files\/directories in entire file system and print their sorted and unique parent directory paths","cmd":"find \/ -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq","cmdset":["sort","find","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files\/directories under current directory","cmd":"find .\/ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.foo files under current directory and print their contents","cmd":"find . -name '*.foo' -exec cat {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.foo files under current directory and search for 'bar' in those files","cmd":"find . -name '*.foo' -exec grep bar {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.htm files under current directory","cmd":"find -type f -name \"*.htm\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.java files in the current directory tree","cmd":"find . -name  \\*.java","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.jpg files in *\/201111\/* paths and numerically sort them according to the second field in the file name with a delimiter '_'","cmd":"find *\/201111\/* -name \"*.jpg\" | sort -t '_' -nk2","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all *.m4a files under \/home\/family\/Music directory","cmd":"find  \/home\/family\/Music -type f -name '*.m4a' -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.mp4 files under \/foo\/bar and move them to \/some\/path","cmd":"find \/foot\/bar\/ -name '*.mp4' -exec mv -t \/some\/path {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.mp4 files under \/working","cmd":"find \/working -type f -name '*.mp4'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.mp4 files under directory named 'working' and show the first one found","cmd":"find working -type f -name \"*.mp4\" | head -1","cmdset":["head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size","cmd":"find $HOME -iname '*.ogg' -type f -size -100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.php (case insensitive) and *.js files (case insensitive) under \/home\/jul\/here excluding  \/home\/jul\/here\/exclude\/* paths","cmd":"find \/home\/jul\/here -type f \\( -iname \"*.php\" -o -iname \"*.js\" \\) ! -path \"\/home\/jul\/here\/exclude\/*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.py files under current directory","cmd":"find . -type f -name \"*.py\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.py files\/directories under current directory","cmd":"find . -name \\*.py -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.rb and *.py files\/directories under current directory","cmd":"find . -name \"*.rb\" -or -name \"*.py\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.rpm files\/directories under current directory","cmd":"find . -name '*.rpm'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.swp files\/directories under current directory","cmd":"find . -name \"*.swp\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.tex files\/directories in maximum 2 levels down the current directory","cmd":"find . -maxdepth 2 -name '*.tex'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.tex regular files in maximum 2 levels down the current directory","cmd":"find . -type f -maxdepth 2 -name \"*.tex\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.txt file (case insensitive) in the entire system and copy them to \/tmp\/txt","cmd":"find \/ -iname '*.txt' | xargs --replace=@ cp @ \/tmp\/txt","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all *.txt file and replace old word to new word with sed command","cmd":"find  . -type f -name \"*.txt\" -exec sed 's\/TZ\/MALAWI\/g' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *.txt files under current directory and copy them to .\/tmp","cmd":"find . -type f -name '*.txt' | sed 's\/'\"'\"'\/\\'\"'\"'\/g' | sed 's\/.*\/\"&\"\/'  | xargs -I{} cp -v {} .\/tmp\/","cmdset":["sed","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all *.txt files\/directories under current directory","cmd":"find -name \\*.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *1234.56789* files\/directories under current directory","cmd":"find . -name '*1234.56789*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *blue* files\/directories under \/myfiles","cmd":"find \/myfiles -name '*blue*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *foo* files\/directories under current directory and copy them to \/your\/dest","cmd":"find . -name \"*foo*\" | sed -e \"s\/'\/\\\\\\'\/g\" -e 's\/\"\/\\\\\"\/g' -e 's\/ \/\\\\ \/g' | xargs cp \/your\/dest","cmdset":["sed","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all *gz files under asia and emea directory","cmd":"find asia emea -type f -name \"*gz\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all *shp* directories under current directory and move all regular files inside those directories to ..\/shp_all\/","cmd":"mv $(find $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq) -type f) ..\/shp_all\/","cmdset":["mv","find","uniq"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all .gif files in the \/var\/www directory tree","cmd":"find \/var\/www -name *.gif","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all .gz archives in the current directory tree","cmd":"find . -name '*.gz'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all .py files in the current directory except \"setup.py\" and those beginning with \"test_\"","cmd":"find . -maxdepth 1 -mindepth 1 \\( -name '*.py' -not -name 'test_*' -not -name 'setup.py' \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all .rb and .yml files in the \/some\/path directory tree and replace \"some_phrase\" with \"replacement_phrase\" in them","cmd":"find \/some\/path -name \"*rb\" -o -name \"*yml\" | xargs grep -sl \"some_phrase\" | xargs sed -i -e 's\/some_phrase\/replacement_phrase\/g'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all .sql files in the current directory recursively and print their path names separated by zeroes","cmd":"find . -name '*.sql' -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all .txt files under the current directory and below","cmd":"find -name \\*.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all .zip files in the current directory tree","cmd":"find . -depth -name *.zip","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all 1US* files\/directories under current directory","cmd":"find . -name '1US*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all 400 permission files under \/data directory and change their permission to 755","cmd":"find \/data -type f -perm 400 -print | xargs chmod 755","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all 50MB files","cmd":"find \/ -size 50M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all 50MB files in file system","cmd":"find \/ -size 50M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all 777 permission directories and use chmod command to set permissions to 755","cmd":"find \/ -type d -perm 777 -print -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all PHP files under current directory that contain only one line","cmd":"find . -type f -name '*.php' -exec grep -Hcm2 $ {} + | sed -n '\/:1$\/{s\/\/\/;p}'","cmdset":["sed","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all PHP files under current directory that contain only one non-blank line","cmd":"find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} + | sed -n '\/:1$\/{s\/\/\/;p}'","cmdset":["sed","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all Read Only files","cmd":"find \/ -perm \/u=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all Read Only files in entire file system and show a few lines of output from the beginning","cmd":"find \/ -perm \/u=r | head","cmdset":["head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all Read Only files in the file system","cmd":"find \/ -perm \/u=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all Subscription.java files\/directories under current directory and enter into the parent directory of the first one found","cmd":"cd $(find . -name Subscription.java | xargs dirname)","cmdset":["cd","xargs","find"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all Subscription.java files\/directories under current directory and enter into the parent directory of the first one found","cmd":"cd `find . -name Subscription.java | xargs dirname`","cmdset":["cd","xargs","find"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all TXT files on the system and copy them to \/tmp\/txt","cmd":"find \/ -iname '*.txt' | xargs --replace=@ cp @ \/tmp\/txt","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","cmd":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories by the name `httpdocs' on the system","cmd":"find \/ -type d -name 'httpdocs'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago","cmd":"find -maxdepth 1 -type d -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories matching the regex '.texturedata' in their names under '\/path\/to\/look\/in\/' directory tree","cmd":"find \/path\/to\/look\/in\/ -type d | grep .texturedata","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all directories named '.texturedata' under '\/path\/to\/look\/in\/' directory tree","cmd":"find \/path\/to\/look\/in\/ -type d -name '.texturedata'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories starting from \/ that have permissions 777","cmd":"find \/ -type d -perm 0777","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically","cmd":"find \"$FOLDER\" -type d -printf \"%T@\\n\" | cut -f 1 -d . | sort -nr","cmdset":["sort","find","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all directories under $root and replace all newlines with : (colon) in the output","cmd":"find $root -type d | tr '\\n' ':'","cmdset":["tr","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all directories under '.cache\/chromium\/Default\/Cache' that are bigger than 100 MB in size excluding single letter directory names","cmd":"find .cache\/chromium\/Default\/Cache\/ -type d -print0 | du -h | grep '[0-9]\\{3\\}M' | cut -f2 | grep -v '^.$'","cmdset":["du","grep","find","cut"],"cmdcath":["SYSINFO","TXTPROC","FDOPS"]}
{"invocation":"Find all directories under '\/var\/www' directory tree excluding '\/var\/www\/web-release-data' and '\/var\/www\/web-development-data' directories and their sub-directories","cmd":"find \/var\/www -type d \\( ! -wholename \"\/var\/www\/web-release-data\/*\"  ! -wholename \"\/var\/www\/web-development-data\/*\" \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under 'test' directory tree whose paths match the regex '.*\/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'","cmd":"find test -type d -regex '.*\/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under \/home\/username\/public_html\/themes and set their permission to 750","cmd":"find \/home\/username\/public_html\/themes -type d -exec chmod 750 {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under \/path\/to\/dir and change their permission to 755","cmd":"find \/path\/to\/dir -type d -exec chmod 755 {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under current directory and change their permission to 500","cmd":"find . -type d -exec chmod 500 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under current directory and change their permission to 755","cmd":"find . -type d -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories under current directory and set their permission to 775","cmd":"find -type d | xargs chmod 775","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all directories under dir whose names are 33 characters long","cmd":"find dir -name '?????????????????????????????????'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all directories with permissions 777 under and below \/var\/www\/html, and change their permissions to 755","cmd":"find \/var\/www\/html -type d -perm 777 -print -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all empty files in the current directory and delete them","cmd":"find . -type f -maxdepth 1 -empty -print0 | xargs -0 \/bin\/rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all executable files under current directory and reverse sort them","cmd":"find . -perm -111 -type f | sort -r","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all executables in the current directory tree","cmd":"find .\/ -executable","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all fglrx-libGL* files under and below debian\/fglrx\/","cmd":"find debian\/fglrx\/ -name 'fglrx-libGL*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all file in current directory with have .c extenstion & have 777 permission . delete then","cmd":"find . -name \"*.c\" -a  -perm -777 | xargs rm -rf","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time","cmd":"find . -type f -printf \"%C@ %p\\n\" | sort -r | head -n 10","cmdset":["sort","head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths","cmd":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \"","cmdset":["sort","find","tail","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak","cmd":"find . -type f -name INPUT.txt -print0 | xargs -0 sed -i.bak '\/^#\/d'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all files excluding *.gz files in the current directory tree and compress them with gzip","cmd":"find . -type f ! -name '*.gz' -exec gzip \"{}\" \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in $dir directory (non-recursive) and count them","cmd":"find \"$dir\" -maxdepth 1 -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files in $dir directory without going into sub-directories","cmd":"find \"$dir\" -maxdepth 1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in \/home\/user\/ that were created or changed 10 minutes ago","cmd":"find \/home\/user\/ -cmin 10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in current directory and search for 'searchName' in those files","cmd":"find .\/ -name \"*\" | xargs grep \"searchName\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all files in current directory excluding hidden files and put the output into full_backup_dir variable","cmd":"full_backup_dir=$(find . -depth '(' -wholename '.\/.*' ')' -prune -o -print)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in entire file system which are larger than 20000KB","cmd":"find \/ -type f -size +20000k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today","cmd":"find -maxdepth 1 -type f -daystart -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the \/home\/ directory tree that were last accessed more than 7 days ago","cmd":"find \/home -atime +7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the \/home\/ directory tree that were last modified less than 7 days ago","cmd":"find \/home -mtime -7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the \/home\/myuser directory recursively that are older than 7 days","cmd":"find \/home\/myuser -mtime +7 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree except .html, ignoring .svn directories","cmd":"find . \\( -type d -name '.svn' -o -type f -name '*.html' \\) -prune -o -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree that are not newer than some_file","cmd":"find . ! -newer some_file","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree whose names are \".DS_STORE\"","cmd":"find . -name \".DS_STORE\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree whose pathnames match pattern \".\/sr*sc\"","cmd":"find . -path \".\/sr*sc\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder","cmd":"find . -size +1M -exec mv {} files \\+","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the current directory tree with extension .html and replace all occurences of \"php\" with \"html\" inside them","cmd":"find .\/ -type f -name *\".html\" | xargs sed -i \"s\/php\/html\/g\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all files in the home directory tree that are owned by another user","cmd":"find ~ ! -user ${USER}","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in the home directory with open permissions","cmd":"find ~ -perm 777","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files in your home directory and below that are larger than 100M.","cmd":"find ~ -size +100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files larger than 20000k","cmd":"find \/ -type f -size +20000k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files name passwd in the root directory and all its sub-directories.","cmd":"find \/ -name passwd","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in","cmd":"find . -name \"file.ext\" -execdir pwd ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named \"foo_bar\" in the current directory recursively","cmd":"find -name foo_bar","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named 'foo' under current directory tree without descending into directories named 'foo'","cmd":"find . -name foo -type d -prune -o -name foo -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named 'new' under current directory tree and display their contents","cmd":"find . -name new -print -exec cat {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named `file1' on the system","cmd":"find \/ -name file1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files named `file1' starting from \/","cmd":"find \/ -name file1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files of the user with UID=1000","cmd":"find -user 1000","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files owned by group `root' in the current directory tree and change their user to `temp'","cmd":"find . -group root -print | xargs chown temp","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all files residing in \/home\/dm\/Video or below that were last changed at least 10 days ago","cmd":"find \/home\/dm\/Video -mtime +10","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that are exactly 50 bytes","cmd":"find \/ -size 50c","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that are set user ID to root","cmd":"find . -user 0 -perm -4000 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that aren't owned by user www-data","cmd":"find -not -user www-data","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that belongs to group 'root' under \/ directory and show a few lines of output from the beginning","cmd":"find \/ -group root | head","cmdset":["head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory without descending into other partitions","cmd":"find \/ -maxdepth 1 -xdev -type f -print -exec grep -i \"stringtofind\" -q {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that have additional permissions","cmd":"find \/ -perm -644","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that were last accessed less than7 days ago under \/home","cmd":"find \/home -mtime -7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that were last accessed more than 7 days ago under \/home","cmd":"find \/home -atime +7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files that were last modified less than7 days ago under \/home","cmd":"find \/home -mtime -7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under $1 not matching the regex '.*\/\\..*' and execute hashmove on each of them with the file path as its argument","cmd":"find $1 -type f -not -regex '.*\/\\..*' -exec $0 hashmove '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under $dir","cmd":"find $dir -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under $musicdir directory","cmd":"find \"$musicdir\" -type f -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files","cmd":"find ${x} -type f -exec chmod ug=rw,o= '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under .\/lib\/app and redirect their sorted list to myFile","cmd":"find .\/lib\/app -type f | sort | tee myFile","cmdset":["sort","find","tee"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all files under \/home\/mywebsite\/public_html\/sites\/all\/modules and set their permission to 640","cmd":"find \/home\/mywebsite\/public_html\/sites\/all\/modules -type f -exec chmod 640 {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under \/path\/to\/Dir and set their permission to 644","cmd":"sudo find \/path\/to\/Dir -type f -print0 | xargs -0 sudo chmod 644","cmdset":["sudo","xargs"],"cmdcath":["SHUTIL","SECOP"]}
{"invocation":"Find all files under \/path\/to\/base\/dir and change their permission to 644","cmd":"find \/path\/to\/base\/dir -type f -exec chmod 644 {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output","cmd":"find . -type f -exec grep California {} \\; -print | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files under current directory and change their permission to 644","cmd":"find . -type f -exec chmod 644 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under current directory and count the output line number","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names","cmd":"find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files under current directory whose file type description contains \"image\", display only path to each file.","cmd":"find . -type f -exec file {} \\; | grep -o -P '^.+: \\w+ image'","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output","cmd":"find . -type f -ctime -3 | tail -n 5","cmdset":["find","tail"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries","cmd":"find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | awk \"{print $2}\"","cmdset":["sort","head","find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files whose name or type description includes \"text\", display only paths to files.","cmd":"find . -exec file {} \\; | grep text | cut -d: -f1","cmdset":["grep","find","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files whose names do not begin with \"zsh\" on ext3 file systems","cmd":"find \/ -fstype ext3 -name zsh*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files with '.conf' extension under '\/etc' directory tree that have been modified in the last 30 minutes","cmd":"find \/etc -name \"*.conf\" -mmin -30","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files with the SUID bit set","cmd":"find \/ -perm -u+s","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files with the SUID bit set beginning with the root directory","cmd":"find \/ -perm -u+s","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files with the SUID bit set, starting from \/","cmd":"find \/ -perm -u+s","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files, starting from \/ but ignoring removable media, whose names end with \".rpm\"","cmd":"find \/ -xdev -name \"*.rpm\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories greater than 100MB and print their list along with their size in \/root\/big.txt file","cmd":"find \\( -size +100M -fprintf \/root\/big.txt '%-10s %p\\n' \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories ignoring *~ files\/directories without descending into .snapshot directory with null character as the delimiter","cmd":"find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in 1 level down the current directory","cmd":"find -mindepth 1 -maxdepth 1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in all paths expanded by the glob pattern *","cmd":"find *","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in directories\/files taken from the glob pattern '\/folder\/path\/*' recursively that have not been modified in the last 2 hours and delete them","cmd":"find \/folder\/path\/* -mmin +120 -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in entire file system that are exactly 50 bytes","cmd":"find \/ -size 50c","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in entire file system that are owned by \"shadow\" group","cmd":"find \/ -group shadow","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others","cmd":"find \/ -perm \/a+w","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories in maximum 1 level down the current directory which do not have only read permission for 'other'","cmd":"find . -maxdepth 1 ! -perm  -o=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories matching the regex pattern \".*\\\\.rb$\" under current directory","cmd":"find . -regex \".*\\\\.rb$\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names","cmd":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths","cmd":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named 'articles.jpg' under '\/home\/username\/public_html\/images' directory tree","cmd":"find \/home\/username\/public_html\/images -name \"articles.jpg\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~\/Library directory tree","cmd":"find ~\/Library\/ -iname \"com.apple.syncedpreferences.plist\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named 'java' under \/usr directory","cmd":"find \/usr -name java","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named 'myfile' under your home directory","cmd":"find ~ -name myfile","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages","cmd":"find . -name \"openssl\" | sed '\/Permission denied\/d;'","cmdset":["sed","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files\/directories named 'photo.jpg' (case insensitive) under current directory tree","cmd":"find . -iname \"photo.jpg\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories named file in 2 and 3 levels down the current directory","cmd":"find -mindepth 2 -maxdepth 3 -name file","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories not with the name 'query_to_avoid' under current directory","cmd":"find \\! -name \"query_to_avoid\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time","cmd":"find ~ -iname \"screen*\" | more","cmdset":["find","more"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files\/directories that start with 'test' in their names under current directory tree","cmd":"find . -name 'test*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories that were modified after February 1st under '\/usr' directory tree","cmd":"find \/usr -newermt \"Feb 1\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under '\/home\/user\/' directory tree whose status was changed exactly 10 minitues ago","cmd":"find \/home\/user\/ -cmin 10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under '\/home\/user\/' directory tree whose status were changed 10 minutes ago","cmd":"find \/home\/user\/ -cmin 10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under .. directory and copy them to ~\/foo\/bar","cmd":"find .. -exec cp -t ~\/foo\/bar -- {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under \/usr\/tom which matches the extended regex '*.pl| *.pm'  in their names","cmd":"find \/usr\/tom | egrep '*.pl| *.pm'","cmdset":["egrep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files\/directories under _CACHE_* directories","cmd":"find _CACHE_*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory and put the output into full_backup_dir variable","cmd":"full_backup_dir=\"`find . -depth -print0`\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory and set their permission to 775","cmd":"find . -type f -exec chmod 775 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory and sort them","cmd":"find | sort","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find all files\/directories under current directory tree excluding files\/directories with name 'query_to_avoid'","cmd":"find \\! -name \"query_to_avoid\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory tree that belong to user 'john'","cmd":"find . -user john","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago","cmd":"find . -name \"R*VER\" -mtime +1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern","cmd":"find . -name 'test*' -prune","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories under current directory with 'FooBar' in their paths and copy them to ~\/foo\/bar","cmd":"find .|grep \"FooBar\"|xargs -I{} cp \"{}\" ~\/foo\/bar","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all files\/directories under current directory with a Depth-First search","cmd":"find dir -depth","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories with '.log' extension that belong to the group 'adm' under '\/var\/log' directory tree","cmd":"find \/var\/log -group adm -name \"*.log\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories with 'my key phrase' in their names under current directory","cmd":"find . -name '*my key phrase*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all files\/directories with 777 permission under '\/apps\/audit' and strip write permission for 'other' from them","cmd":"find \/apps\/audit -perm -7 -print | xargs chmod o-w","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all image.pdf files\/directories under .\/polkadots with null character as the delimiter","cmd":"find .\/polkadots -name \"image.pdf\" -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.","cmd":"sort file | uniq | cut -f1 -d' ' | uniq -c | rev","cmdset":["sort","uniq","rev","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Find all lines matching \"$USER\" in \"file\" and number the output","cmd":"grep  $USER file |nl","cmdset":["grep","nl"],"cmdcath":["TXTPROC"]}
{"invocation":"Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'","cmd":"find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u","cmdset":["sort","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all read only files in  \/home directory","cmd":"find \/home -type f -perm \/u=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all read-only files","cmd":"find \/ -perm \/u=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular *.css files","cmd":"find . -type f -name \"*.css\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files in the \/path\/to\/base\/dir tree","cmd":"find \/path\/to\/base\/dir -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\\n'","cmd":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\\n'","cmd":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files in the current directory tree that are not readable by all","cmd":"find -type f ! -perm -444","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files in the current directory tree that do not contain a whitespace","cmd":"find . -type f \\( -exec grep -q '[[:space:]]' {} \\; -o -print \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files on the system whose size is greater than 20000k","cmd":"find \/ -type f -size +20000k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files starting from level 3 of directory tree ~\/container and move them to the current directory's parent","cmd":"find ~\/container  -mindepth 3 -type f -exec mv {} .. \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files under $dir","cmd":"find $dir -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files","cmd":"find $dir -type f -name $1 -exec sed $num'q;d' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files under and below \/root that match pattern \"*linux*\", case insensitive","cmd":"find \/root -type f -iname \"*linux*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files under current directory","cmd":"find . -depth -type f -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files under test directory","cmd":"find test -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'","cmd":"find . -type f|grep -i \"\\.jpg$\" |sort| tee file_list.txt","cmdset":["tee","sort","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all strings matching pattern \"^${KEY}${DELIMITER}\" in $FILE file and print rest of string after $DELIMITER","cmd":"cat \"$FILE\" | grep \"^${KEY}${DELIMITER}\" | cut -f2- -d\"$DELIMITER\"","cmdset":["cat","grep","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Find all symbolic links in the current directory tree","cmd":"find -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all symlinks under current directory","cmd":"find .\/ -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all target files outside the current working directory with symbolic links in the current working directory","cmd":"find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"","cmdset":["grep","find","readlink"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find all the *.txt files in the current directory older than 48 hours","cmd":"find . -maxdepth 1 -name '*.txt' -mtime +2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the .c files in the current directory tree that contain the string 'stdlib.h'","cmd":"find . -name '*.c' | xargs egrep stdlib.h","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find all the Sticky Bit set files whose permission are 551","cmd":"find \/ -perm 1551","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the Sticky Bit set files whose permission are 551 in the file system","cmd":"find \/ -perm 1551","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files in entire file system  which are accessed 50 days back","cmd":"find \/ -atime 50","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files in file system which are accessed 50 days back","cmd":"find \/ -atime 50","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files in file system which are accessed in last 1 hour","cmd":"find \/ -amin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files in file system which are modified in last 1 hour","cmd":"find \/ -mmin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files in file system which are modified more than 50 days back and less than 100 days","cmd":"find \/ -mtime +50 -mtime -100","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files on the system that have been accessed within the last hour","cmd":"find \/ -amin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files on the system that have been modified within the last hour","cmd":"find \/ -mmin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files recursively in directories or files taken from the glob pattern \/tmp\/test\/* that have been modified today","cmd":"find \/tmp\/test\/* -mtime -0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files that were modified more than one day ago","cmd":"find . -mtime +1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files that were modified within the last day","cmd":"find . -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are accessed 50 days back","cmd":"find \/ -atime 50","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are accessed in last 1 hour","cmd":"find \/ -amin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are accessed in last 1 hour in entire file system","cmd":"find \/ -amin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are modified in last 1 hour","cmd":"find \/ -mmin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are modified in last 1 hour in entire file system","cmd":"find \/ -mmin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which are modified more than 50 days back and less than 100 days","cmd":"find \/ -mtime +50 -mtime -100","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which were accessed 50 days ago","cmd":"find \/ -atime 50","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files which were modified more than 50 days but less than 100 days ago","cmd":"find \/ -mtime +50 -mtime -100","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files\/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26","cmd":"find .\/ -newermt 2014-08-25 ! -newermt 2014-08-26 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the files\/directories under user's home directory that do not belong to the user $USER","cmd":"find ~ ! -user ${USER}","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them","cmd":"find \"$DIR\" -type f \\! -newer \"$a\" \\! -samefile \"$a\" -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and clear UTF-8 files with BOM","cmd":"find . -type f -exec sed '1s\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and delete all .zip files in the current directory tree","cmd":"find . -depth -name '*.zip' -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and remove all .mp3 regular files under the current directory and below","cmd":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and remove multiple *.mp3 files","cmd":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and remove multiple files such as *.mp3 or *.txt","cmd":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find and remove multiple files such as *.mp3 or *.txt under current directory","cmd":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.","cmd":"find . -atime +7 -size +20480 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find blabla* files under current directory","cmd":"find . -depth -name \"blabla*\" -type f | xargs rm -f","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find directories in the current directory tree that were modified within the last 24 hours and move them to \/path\/to\/target-dir","cmd":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find empty files in the test directory","cmd":"find test -empty","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find empty files under test directory","cmd":"find test -empty","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find empty files\/directories under test directory","cmd":"find test -empty","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find executable files","cmd":"find . -perm -100 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files and directories newer than CompareFile under current directory","cmd":"find . -newer CompareFile -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files and directories that are at least seven levels of nesting in the directory \/usr\/src excluding CVS directory","cmd":"find \/usr\/src -name CVS -prune -o -depth +6 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files and directories with group id 1003","cmd":"find . -gid 1003","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files changed in the last 1 day","cmd":"find . -mtime -1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in and below the current directory whose names begin with \"not\" and remove one of them","cmd":"find . -name not\\* | tail -1 | xargs rm","cmdset":["find","xargs","tail"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find files in entire file system that are writable by group or other","cmd":"find \/ -perm \/g=w,o=w","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in the \"dir\" directory tree whose names are 33 characters in length","cmd":"find dir -name '?????????????????????????????????'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in the \/home\/user directory tree changed exactly 10 minutes ago","cmd":"find \/home\/user\/ -cmin 10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in the current directory and below that are newer than \/bin\/sh","cmd":"find . -newer \/bin\/sh","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in the current directory recursively that are not readable by all","cmd":"find -type f ! -perm -444","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files in the current directory tree whose names begin with \"file\" and whose size is 0, and remove them","cmd":"find . -name 'file*' -size 0 -print0 | xargs -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","cmd":"find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files matching the pattern \".\/sr*sc\" in their paths under current directory","cmd":"find . -path \".\/sr*sc\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files modified at least 5 days in the future","cmd":"find . -newermt \"5 days\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files owned by no user","cmd":"find \/ -nouser","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files owned by the \"shadow\" group","cmd":"find \/ -group shadow","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files that are 100k","cmd":"find -size 100k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files that have a modification time of a day ago","cmd":"find \/ -mtime 1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files that were modified in less than 1 minute ago","cmd":"find \/ -mmin -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files whose name starts with \"MyFile\", ignoring the case","cmd":"find . -iname 'MyFile*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files with name `aaa.txt' under the current directory","cmd":"find . -name aaa.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories in entire file system that have been modified in the last minute","cmd":"find \/ -mmin -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories in entire file system that were modified a day ago","cmd":"find \/ -mtime 1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories in entire file system with at least 644 permission","cmd":"find \/ -perm -644","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories modified within the last day under \/etc","cmd":"find \/etc -type f -ctime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories modified within the last hour under current directory","cmd":"find . -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories named 'aaa.txt' under current directory tree","cmd":"find . -name aaa.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories named 'foo' in the current partition of the root filesystem","cmd":"find -x \/ -name foo","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories named 'foo' under current directory tree without descending into directories named 'foo'","cmd":"find . -name foo -type d -prune -o -name foo -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories named 'sar' under directory trees whose path starts with '\/u' or '\/b' or '\/s' or '\/o'","cmd":"find `ls -d \/[ubso]*` -name sar","cmdset":["find","ls"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories that does not have write permssion for group","cmd":"find \/path ! -perm \/020","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories that does not have write permssion for group","cmd":"find \/path ! -perm \/g+w","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories that does not have write permssion for group or others","cmd":"find \/path ! -perm -022","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find files\/directories that have no owner or group under \/path","cmd":"find \/path -nouser -or -nogroup","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find recursively all files in \/path that end in \"txt\" and copy them to \/tmp\/","cmd":"find \/path -type f -name \"*txt\" -printf \"cp '%p' '\/tmp\/test_%f'\\n\" | bash","cmdset":["find","bash"],"cmdcath":["PROGSCRIPT","FDOPS"]}
{"invocation":"Find recursively all files whose names ends with \"foo\"","cmd":"find . -name \"*foo\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find recursively the latest modified file in the current directory","cmd":"find . -type f -print0|xargs -0 ls -drt|tail -n 1","cmdset":["find","xargs","tail"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find recursively the latest modified file in the current directory","cmd":"find . -type f | sed 's\/.*\/\"&\"\/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1","cmdset":["sed","find","sort","xargs","tail","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Find regular files in the current directory that are writable by their owner","cmd":"find -maxdepth 1 -type f -perm \/200","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find regular files named \"regex\" under and below \/dir\/to\/search\/","cmd":"find \/dir\/to\/search\/ -type f -name 'regex' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find regular files under \/ that contain \"stringtofind\" and clear out their contents","cmd":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '\/.\/d' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find text in whole directory tree","cmd":"find . -type f | xargs grep \"text\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find the core files and  remove them","cmd":"find . -name \"core\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find the directory with least modification time under current directory","cmd":"find -type d -printf '%T+ %p\\n' | sort | head -1","cmdset":["sort","head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE\/","cmd":"find -name '*.ISOLATE.quantifier.txt' -maxdepth 1 -exec mv {} ISOLATE\/ +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder .\/JUKEBOX","cmd":"find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE .\/JUKEBOX","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Find the passwd file in the current directory and one level down","cmd":"find -maxdepth 2 -name passwd","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find the passwd file under root and one level down.","cmd":"find -maxdepth 2 -name passwd","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Find users whose names begin with \"ab\" or whose terminal from which they are logged in ends with \"1\"","cmd":"who | grep -e '^ab' -e '1$'","cmdset":["who","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Finds all php processes running in system.","cmd":"pstree | grep php","cmdset":["pstree","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.","cmd":"x=$(grep \"$(dirname \"$path\")\" file)","cmdset":["grep","dirname"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Finds file 'Subscription.java' and changes to containing folder.","cmd":"cd $(find . -name Subscription.java | xargs dirname)","cmdset":["cd","xargs","find"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Finds file 'Subscription.java' and changes to containing folder.","cmd":"cd `find . -name Subscription.java | xargs dirname`","cmdset":["cd","xargs","find"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\\S+ )*\\S+', and saves them in $match variable, each matched part on a separate line.","cmd":"match=$(echo \"${line}\" | egrep -o 'run-parts (-{1,2}\\S+ )*\\S+')","cmdset":["egrep","echo"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Finds out what groups a given user has.","cmd":"groups user","cmdset":["groups"],"cmdcath":["SYSINFO"]}
{"invocation":"Finds recursion-related options of a 'grep' utility.","cmd":"grep --help |grep recursive","cmdset":["grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.","cmd":"find . -name \"a\" -type d | xargs rmdir","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Finds shell options with 'login' in name.","cmd":"shopt | grep login","cmdset":["shopt","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","cmd":"echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3","cmdset":["echo","grep","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Finds users with X session in system and puts the result in USERS variable.","cmd":"USERS=$(w | awk '\/\\\/X\/ {print $1}')","cmdset":["w","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Fix files to default permissions 644","cmd":"find . -type f -exec chmod 644 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Fix files to default permissions 755","cmd":"find . -type d -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Force create a hard link in \"\/usr\/local\/bin\" to \"findpdftext\"","cmd":"sudo ln -f \"findpdftext\" \/usr\/local\/bin","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Force create a symbolic link named \"$*\" to the canonical absolute path of \"$1\"","cmd":"ln -sf \"$(readlink -f \"$1\")\" \"$*\"","cmdset":["ln","readlink"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Force create a symbolic link named \"$pdir\" to \"$pluginpath\" with verbose output","cmd":"sudo ln --symbolic --verbose --force \"$pluginpath\" \"$pdir\"","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories","cmd":"find . -maxdepth 1 -name \"*.jpg\" -size -50k -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Forcibly create symbolic links in target directory \"~\/staging\" for all files located in directory \"~\/mirror\"","cmd":"ln --force --target-directory=~\/staging ~\/mirror\/*","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"Forcibly removes files  '\/tmp\/stored_exception', '\/tmp\/stored_exception_line', '\/tmp\/stored_exception_source'","cmd":"rm -f \/tmp\/stored_exception \/tmp\/stored_exception_line \/tmp\/stored_exception_source","cmdset":["rm"],"cmdcath":["FDOPS"]}
{"invocation":"Format each line as 3 columns based on extraneous columns","cmd":"awk '{for(i=3;i<=NF;i++){print $1,$2,$i}}' file | column -t","cmdset":["column","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Forward all connections to client localhost 3309 via the SSH tunnel to \"mysql_access_server\" and then connect to host \"sqlmaster.example.com\" on port 3306","cmd":"ssh -f mysql_access_server -L 3309:sqlmaster.example.com:3306 -N","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Generate the Spanish alphabet and number each character","cmd":"echo -e {{a..n},\u00f1,{o..z}}\"\\n\" | nl","cmdset":["echo","nl"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Generates default-formatted file name of temporary file in a \/dev\/mapper folder, and saves path to it in a variable 'MAPPER'.","cmd":"MAPPER=$(mktemp -up \/dev\/mapper)","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.","cmd":"fn=$(mktemp -u -t 'XXXXXX')","cmdset":["mktemp"],"cmdcath":["SHUTIL"]}
{"invocation":"Get a detailed listing of all symbolic links in \/usr\/bin starting with \"z\"","cmd":"find \/usr\/bin  -type l  -name \"z*\" -exec ls  -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Get a list of files and directories in the current directory tree","cmd":"find . -print0 | xargs -0 echo","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Get a recursive file list of directory $dir","cmd":"find $dir -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Get the disk space used by all *.txt (case insensitive) files\/directories under current directory","cmd":"find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1","cmdset":["find","xargs","tail"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Get the number of regular files in the directory given as the bash script argument $1","cmd":"find $1 -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Get the total size of all files under dir1 directory","cmd":"find dir1 ! -type d -printf \"%s\\n\" | awk '{sum += $1} END{print sum}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Gets IP address of ${NET_IF} network interface.","cmd":"NET_IP=`ifconfig ${NET_IF} | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'`","cmdset":["grep","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets IP address of 'en1' network interface.","cmd":"my_ip=$(ifconfig en1 | grep 'inet addr' | awk '{print $2}' | cut -d: -f 2)","cmdset":["cut","grep","awk","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets IP addresses of all active network interfaces on host.","cmd":"ifconfig | grep 'inet' | grep -v '127.0.0.1' | awk '{print $2}' | sed 's\/addr:\/\/'","cmdset":["sed","grep","awk","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets IP addresses of all active network interfaces.","cmd":"ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'","cmdset":["ifconfig","grep","awk","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets IP addresses of all active network interfaces.","cmd":"ifconfig | grep -oP \"(?<=inet addr:).*?(?=  Bcast)\"","cmdset":["grep","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets MAC address of en0 network interface.","cmd":"ifconfig en0 | grep -Eo ..\\(\\:..\\){5}","cmdset":["grep","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets MAC address of eth0 network interface.","cmd":"ifconfig eth0 | grep HWaddr | cut -d ' ' -f 9","cmdset":["ifconfig","grep","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Gets list of IP addresses of all network interfaces.","cmd":"ifconfig | sed -En 's\/127.0.0.1\/\/;s\/.*inet (addr:)?(([0-9]*\\.){3}[0-9]*).*\/\\2\/p'","cmdset":["sed","ifconfig"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Give all files in the \/path\/to\/base\/dir tree read privileges","cmd":"find \/path\/to\/base\/dir -type f -exec chmod 644 {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Go to directory pointed by last element of array \"dirs\" in bash version 4.2","cmd":"cd \"${dirs[-1]}\"","cmdset":["cd"],"cmdcath":["FDOPS"]}
{"invocation":"Identify CMS version\/releases accross all your Drupal websites","cmd":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/modules\/system\/system.info\" -exec grep -H \"version = \\\"\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Identify CMS version\/releases accross all your Wordpress websites","cmd":"find \/var\/www\/vhosts\/*\/httpdocs\/ -type f -iwholename \"*\/wp-includes\/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Immediately exit the shell if a command fails","cmd":"set -e","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"In the current shell, interpret 'incl.sh' which is in the directory pointed by variable DIR","cmd":"source \"$DIR\/incl.sh\"","cmdset":["source"],"cmdcath":["PROGSCRIPT"]}
{"invocation":"Instantly kill all processes whose command is 'myprocess'.","cmd":"kill -9 \\`pgrep myprocess\\`","cmdset":["kill"],"cmdcath":["PROCCTRL"]}
{"invocation":"Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'","cmd":"FOO_NO_WHITESPACE=\"$(echo -e \"${FOO}\" | tr -d '[[:space:]]')\"","cmdset":["echo","tr"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Invoke a trusted X11 forwarding SSH connection with server \"192.168.0.14\" on port 222 as user \"phil\"","cmd":"ssh -v -Y phil@192.168.0.14 -p 222","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Isolate first comma-delimited field of each line in \"file\", discard consecutive duplicates, and search \"file\" for first matching occurrence of that field.","cmd":"cut -d, -f1 file | uniq | xargs -I{} grep -m 1 \"{}\" file","cmdset":["cut","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","cmd":"join -t, -a1 -a2 <(sort file1) <(sort file2)","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Join comma-separated information in 4 files - files must be sorted.","cmd":"join -t, test.1 test.2 | join -t, - test.3 | join -t, - test.4","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Keep only the last two hyphen-separated sections of \"abc-def-ghi-jkl\"","cmd":"echo \"abc-def-ghi-jkl\" | rev | cut -d- -f-2 | rev","cmdset":["rev","echo","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Kill all processes which were executed in background by the current shell.","cmd":"jobs -p | xargs kill -9","cmdset":["xargs","jobs"],"cmdcath":["SHUTIL","PROCCTRL"]}
{"invocation":"List \".java\" files that have the same filename and contents","cmd":"md5sum *.java | sort | uniq -d","cmdset":["sort","md5sum","uniq"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"List .c files in the current directory","cmd":"find . \\( ! -name . -prune \\) -name \"*.c\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List absolute path of files in the current directory","cmd":"ls -1 | xargs readlink -f","cmdset":["xargs","ls"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List all *.gif files found in the current directory tree","cmd":"find . -name *.gif -exec ls {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all .c and .h files in the current directory tree that contain \"thing\"","cmd":"find . -name '*.[ch]' | xargs grep -l thing","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List all .gif files in the current directory tree","cmd":"find . -name *.gif -exec ls {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","cmd":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" -exec ls -lrt {} + | awk '{print $9}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","cmd":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" | xargs ls -lrt | awk print '$9'","cmdset":["find","xargs","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"List all crons in the environment","cmd":"cat \/etc\/passwd | sed 's\/^\\([^:]*\\):.*$\/crontab -u \\1 -l 2>\\&1\/' | grep -v \"no crontab for\" | sh","cmdset":["sed","cat","sh","grep"],"cmdcath":["TXTPROC","PROGSCRIPT"]}
{"invocation":"List all directories in current directory, works even if they have weird names or names starting with a dash.","cmd":"find -maxdepth 1 -type d | awk -F\".\/\" '{print $2}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List all directories in maximum 1 level down the current directory","cmd":"find . -type d -maxdepth 1 -exec ls -dlrt {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all directories of the $topdir directory tree that contain a Makefile and at least one .py file","cmd":"find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u","cmdset":["sort","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"List all environment variables","cmd":"set","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"List all environment variables (name and value) whose name starts with GOROOT","cmd":"env | grep '^GOROOT'","cmdset":["grep","env"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"List all files and directories in long list format with a time style of \"long-iso\" and sort from oldest modifed to newest modified","cmd":"ls -l --time-style=long-iso | sort -k6","cmdset":["sort","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List all files from the current directory tree that were modified less than 60 minutes ago, omitting \".\"","cmd":"find . -mindepth 1 -mmin -60 | xargs -r ls -ld","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List all files in the current directory tree that were modified 60 minutes ago","cmd":"find -mmin 60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all files in the current directory tree that were modified 60 minutes ago","cmd":"find . -mmin 60 -print0 | xargs -0r ls -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List all files\/directories under current directory","cmd":"find -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all files\/directories under current directory","cmd":"find . -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all nfs mounts","cmd":"mount -l -t nfs4","cmdset":["mount"],"cmdcath":["SYSINFO"]}
{"invocation":"List all regular files from the current directory tree that were modified less than 60 days ago","cmd":"find -type f -mtime -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List all regular files from the current directory tree that were modified less than 60 minutes ago","cmd":"find . -mmin -60 -type f | xargs ls -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List all unique parent directories of .class files found under the current directory","cmd":"find -name '*.class' -printf '%h\\n' | sort -u","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List an empty environment (prints nothing)","cmd":"env -i","cmdset":["env"],"cmdcath":["SHUTIL"]}
{"invocation":"List current directory, waiting for user input at each page.","cmd":"ls | more","cmdset":["ls","more"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest","cmd":"du -sh *\/ | sort -n","cmdset":["du","sort"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest","cmd":"du -a --max-depth=1 | sort -n","cmdset":["du","sort"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"List environment variables whose name matches \".*X.*\"","cmd":"set | awk -F \"=\" '{print $1}' | grep \".*X.*\"","cmdset":["set","grep","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"List file information of the full path of command \"c++\"","cmd":"ls -ald `which c++`","cmdset":["which","ls"],"cmdcath":["HELPDOC","FDOPS"]}
{"invocation":"List files in directory \"one\" and \"two\" that do not exist in the other","cmd":"sort <(ls one) <(ls two) | uniq -u","cmdset":["sort","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"List files in the current directory","cmd":"find . \\( -path '.\/*' -prune \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List files in the current directory and below","cmd":"find -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List files larger than 10MB under \/var\/log \/tmp that haven't changed in a month","cmd":"find \/tmp \/var\/tmp -size +30M -mtime 31 -print0 | xargs -0 ls -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List the commands in \/usr\/bin, pausing for user input after each page.","cmd":"more <( ls \/usr\/bin )","cmdset":["more"],"cmdcath":["TXTPROC"]}
{"invocation":"List the directory paths of all file.ext files under present working directory","cmd":"find . -name \"file.ext\" -execdir pwd ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'","cmd":"find . -type f -print | xargs grep -il '^Subject:.*unique subject'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"List the files in \"archive.tar.gz\"","cmd":"gzip -l archive.tar.gz","cmdset":["gzip"],"cmdcath":["ARCH"]}
{"invocation":"List the largest file in long list format of all the files under the current directory","cmd":"find . -type f -ls | sort -nrk7 | head -1 #unformatted","cmdset":["sort","head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List the names of all files under current directory","cmd":"find . -type f -exec basename {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"List the unique parent directories of all .class files found in the entire filesystem","cmd":"find \/ -name *.class -printf '%h\\n' | sort --unique","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"List the z* links in the \/usr\/bin directory and the file to which it points to","cmd":"find \/usr\/bin  -type l  -name \"z*\" -exec ls  -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Lists all files in a current folder, separating names with comma.","cmd":"ls -1 | paste -sd \",\" -","cmdset":["paste","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Lists all files in a current folder, separating names with space.","cmd":"ls -1 | awk 'ORS=\" \"'","cmdset":["awk","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Lists all subdirectories in current directory with a trailing slash","cmd":"ls -d .\/*\/                     ### more reliable BSD ls","cmdset":["ls"],"cmdcath":["FDOPS"]}
{"invocation":"Lists long format information about file '\/bin\/echo'.","cmd":"ls -l \/bin\/echo","cmdset":["ls"],"cmdcath":["FDOPS"]}
{"invocation":"Locate OGG files under the home directory smaller than 100 megabytes","cmd":"find $HOME -iname '*.ogg' -type f -size -100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate all *.csv files under the current directory tree separating the file names with zeroes","cmd":"find . -name \"*.csv\" -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate all *.mov files in the current directory tree","cmd":"find . -name '*.mov'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate all files in the current directory and below that do not have \"testfileasdf\" in their names","cmd":"find -not -name \"*testfileasdf*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate all passwd files on the system","cmd":"find \/ -name passwd","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate symbolic links in \/usr and below","cmd":"find \/usr -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locate symlinks in directory trees lpi104-6 and research\/lpi104-6","cmd":"find lpi104-6 research\/lpi104-6 -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Locates 'gcc' executable file, strips last two parts of the full path, adds '\/lib' to the end and saves result in 'libdir' variable.","cmd":"libdir=$(dirname $(dirname $(which gcc)))\/lib","cmdset":["which","dirname"],"cmdcath":["HELPDOC","FDOPS"]}
{"invocation":"Log in using key file \".\/device_id.pem\" as user \"deviceuser\" on host \"middle.example.org\" and port 2222","cmd":"ssh -i .\/device_id.pem -p 2222 deviceuser@middle.example.org","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Log into \"ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com\" using identity file \"~\/path\/mykeypair.pem\"","cmd":"ssh -i ~\/path\/mykeypair.pem ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Look for directory `Cookbook'","cmd":"find -name Cookbook -type d","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Look for files with the name 'search' under current directory","cmd":"find . -name \"search\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Make 3 directories named \"~\/Labs\/lab4a\/folder\" followed by the number 1, 2, or 3","cmd":"mkdir ~\/Labs\/lab4a\/folder{1,2,3}","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make DNS lookup for hostname stackoverflow.com","cmd":"dig stackoverflow.com","cmdset":["dig"],"cmdcath":["NET"]}
{"invocation":"Make a copy of the entire contents of SRCFOLDER called \"DESTFOLDER\", if DESTFOLDER exists, the copy will be placed within it.","cmd":"cp -R SRCFOLDER DESTFOLDER\/","cmdset":["cp"],"cmdcath":["FDOPS"]}
{"invocation":"Make a directory in the current working directory with a random 32 alphanumeric character name","cmd":"cat \/dev\/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | xargs mkdir","cmdset":["head","cat","xargs","tr","fold"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Make a directory in the current working directory with a random 32 alphanumeric character name","cmd":"mkdir $(cat \/dev\/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)","cmdset":["head","cat","tr","mkdir","fold"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Make directories \"$@\" verbosely and replace \"mkdir: created directory \" with \"jar-jar: yea, weesa gotta \" in the output","cmd":"mkdir -v \"$@\" | sed 's\/mkdir: created directory \/jar-jar: yea, weesa gotta \/'","cmdset":["sed","mkdir"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Make directories \"a\/b\/c\" as needed without causing an error if it exists","cmd":"mkdir -p a\/b\/c","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directories \"~\/foo\/bar\/baz\", \"~\/foo\/bar\/bif\", and \"~\/foo\/boo\/bang\" as needed","cmd":"mkdir -p ~\/foo\/bar\/baz ~\/foo\/bar\/bif ~\/foo\/boo\/bang","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directories as needed in \"dest\" for every directory found under \"src\/\"","cmd":"find src\/ -type d -exec mkdir -p dest\/{} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Make directories to \"\/my\/other\/path\/here\" as needed","cmd":"mkdir -p \/my\/other\/path\/here","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directories to \"\/some\/path\" as needed","cmd":"mkdir -p .\/some\/path","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directory \"\/tmp\/imaginary\/\" on remote host before archiving \"file\" to \"user@remote:\/tmp\/imaginary\/\"","cmd":"rsync -aq --rsync-path='mkdir -p \/tmp\/imaginary\/ && rsync' file user@remote:\/tmp\/imaginary\/","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Make directory \"aaa\/bbb\"","cmd":"mkdir aaa\/bbb","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directory \"dir1\"","cmd":"mkdir dir1","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directory \"tata\"","cmd":"mkdir tata","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Make directory \"~\/public_html\"","cmd":"mkdir ~\/public_html","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"Measure the disk space taken up by all *.txt files in the current directory tree","cmd":"find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1","cmdset":["find","xargs","tail"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Merge already sorted files \"file*.txt\" and split the result into files of at most 100000 lines each with a prefix \"sorted_file\"","cmd":"sort --merge file*.txt | split -l 100000 - sorted_file","cmdset":["sort","split"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with \"no-match\", and output the second field from standard input and the second and third field from file1.txt","cmd":"join -t, -o 1.2,2.2,2.3 -a 1 -e 'no-match' - <(sort file1.txt)","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Merge data in file1 and file2 where second field is common in both files","cmd":"join -j2 <(sort -k2 file1) <(sort -k2 file2)","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Modify interval to 0.1 seconds for the watch command","cmd":"watch -n 0.1","cmdset":["watch"],"cmdcath":["SHUTIL"]}
{"invocation":"Mount \"\/dev\/shm\" using \/etc\/fstab entry","cmd":"mount \/dev\/shm","cmdset":["mount"],"cmdcath":["SYSINFO"]}
{"invocation":"Mount \"ext4\" filesystem \"\/dev\/xvdf1\" on \"\/vol\"","cmd":"sudo mount \/dev\/xvdf1 \/vol -t ext4","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Mount \"tmpfs\" filesystem to \"\/path\/to\/dir\"","cmd":"mount none -t tmpfs \/path\/to\/dir","cmdset":["mount"],"cmdcath":["SYSINFO"]}
{"invocation":"Mount remote \"smbfs\" filesystem \"\/\/username@server\/share\" on \"\/users\/username\/smb\/share\" as soft","cmd":"mount -t smbfs -o soft \/\/username@server\/share \/users\/username\/smb\/share","cmdset":["mount"],"cmdcath":["SYSINFO"]}
{"invocation":"Move \"tobecopied\/tobeexcluded\" to the current directory","cmd":"mv tobecopied\/tobeexcluded .","cmdset":["mv"],"cmdcath":["FDOPS"]}
{"invocation":"Move all *.emlx files\/directories under \/path\/to\/folders\/ to .\/Messages\/ directory","cmd":"find \/path\/to\/folders\/ -name \\*.emlx -print0 | xargs -0 -I {} mv {} .\/Messages\/","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Move all *.mp4 files from directory \/foo\/bar and its subdirectories to \/some\/path","cmd":"find \/foo\/bar -name '*.mp4' -exec mv -t \/some\/path {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Move all *.mp4 files from directory \/foo\/bar and its subdirectories to \/some\/path","cmd":"find \/foo\/bar -name '*.mp4' -print0 | xargs -0 mv -t \/some\/path {}","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Move all directories in the current directory tree that have been modified in the last day to \"\/path\/to\/target-dir\"","cmd":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Move all files and directories in the current directory to \"\/foo\"","cmd":"mv * \/foo","cmdset":["mv"],"cmdcath":["FDOPS"]}
{"invocation":"Move all files in \"\/path\/subfolder\" to \"\/path\" without clobbering any destination files","cmd":"find \/path\/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} \/path \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Move all files listed in $i file to dir.$count directory","cmd":"cat $i | xargs mv -t dir.$count","cmdset":["cat","xargs"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Move all files that contain \"Subject: \\[SPAM\\]\" to \"DIR\"","cmd":"grep -l 'Subject: \\[SPAM\\]' | xargs -I '{}' mv '{}' DIR","cmdset":["grep","xargs"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","cmd":"find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox\/Messages' ';' -exec sh -c 'mv {}.mbox\/*.emlx {}.mbox\/Messages' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Non-recursively finds all '*.pdf' files in a current folder and removes them.","cmd":"find . -maxdepth 1 -name \"*.pdf\" -print0 | xargs -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.","cmd":"cat files | sort -t- -k2,2 -n","cmdset":["sort","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Numerically sort file \"table\" by the fourth character of the second field, ignoring leading spaces","cmd":"sort -b -n -k2.4 table","cmdset":["sort"],"cmdcath":["TXTPROC"]}
{"invocation":"Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.","cmd":"info bash 'Basic Shell Features' 'Shell Expansions' 'Filename Expansion' 'Pattern Matching'","cmdset":["info"],"cmdcath":["HELPDOC"]}
{"invocation":"Output all lines in 'file' which contain a tab character.","cmd":"awk -F\"\\t\" 'NF>1' file","cmdset":["awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.","cmd":"join -1 2 -2 1 -t, BigFile.csv LittleFile.csv","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Overwirte file '\/path\/to\/your\/file' with random content, showing progress while execution.","cmd":"shred -v -n 1 \/path\/to\/your\/file #overwriting with random data","cmdset":["shred"],"cmdcath":["SECOP"]}
{"invocation":"Page through the contents of 'file', but excess from lines that don't fit within the screen\/window width is cut.","cmd":"less -S file","cmdset":["less"],"cmdcath":["TXTPROC"]}
{"invocation":"Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.","cmd":"cat BIG_FILE.txt | less","cmdset":["cat","less"],"cmdcath":["TXTPROC"]}
{"invocation":"Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses","cmd":"echo $(seq 254) | xargs -P255 -I% -d\" \" ping -W 1 -c 1 192.168.0.% | grep -E \"[0-1].*?:\"","cmdset":["seq","echo","grep","xargs"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Pipe the output of ls into \"read var\" in its separate process","cmd":"ls | read var","cmdset":["read","ls"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Prefix all files and folders in the current directory with \"PRE_\"","cmd":"find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print \"$1\" or default 10 random lines from standard input","cmd":"nl | sort -R | cut -f2 | head -\"${1:-10}\"","cmdset":["sort","head","nl","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Print \"$PATH\" variable as input to awk script \"rem_dup.awk\" and concatenate the result with \":\"","cmd":"echo $PATH | awk -F: -f rem_dup.awk | paste -sd:","cmdset":["echo","paste","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print \"I am USER and the program named ls is in LS_PATH\" where \"USER\" is the current user's user name and \"LS_PATH\" is the full path of the command \"ls\"","cmd":"echo I am $(whoami) and the program named ls is in $(which ls).","cmdset":["which","echo","whoami"],"cmdcath":["SYSINFO","SHUTIL","HELPDOC"]}
{"invocation":"Print \"This is a sentence.\" by replacing all consecutive space characters with a single newline character","cmd":"echo \"This is   a sentence.\" | tr -s \" \" \"\\012\"","cmdset":["echo","tr"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print \"yes\" 4 times followed by 1 \"no\"","cmd":"yes yes | sed -e 5s\/yes\/no\/ -e 5q","cmdset":["sed","yes"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print '-okdir is an action so an implicit -print is not applied' for each file\/directory found by the name 'file' under current directory tree","cmd":"find -name file -okdir echo '-okdir is an action so an implicit -print is not applied' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print '111 22 3\\n4 555 66\\n' by replacing the spaces with tabs and '\\n' with newlines","cmd":"echo -en '111 22 3\\n4 555 66\\n' | tr ' ' '\\t'","cmdset":["echo","tr"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print 'file' content, formatting output as 29-symbol wide column","cmd":"cat file | fold -w29","cmdset":["cat","fold"],"cmdcath":["TXTPROC"]}
{"invocation":"Print 10 \"#\" characters in a row","cmd":"yes '#' | head -n 10 | tr -d '\\n'","cmdset":["tr","head","yes"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print 10 lines of a single \"x\"","cmd":"yes x | head -n 10","cmdset":["head","yes"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print A record for domain 'domain.' from 8.8.8.8 nameserver","cmd":"dig @8.8.8.8 domain. a","cmdset":["dig"],"cmdcath":["NET"]}
{"invocation":"Print DISPLAY of \"orschiro\" user","cmd":"who | awk -F '[()]' '\/orschiro\/{print $(NF-1)}' | grep -v orschiro | uniq","cmdset":["who","grep","awk","uniq"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print a colon-separated list of all directories from the $root directory tree","cmd":"find $root -type d -printf '%p:'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print a colon-separated list of all directories from the $root directory tree","cmd":"find $root -type d | tr '\\n' ':'","cmdset":["tr","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print a count of all unique lines in \"ports.txt\" sorted from most frequent to least frequent","cmd":"sort ports.txt | uniq -c | sort -r","cmdset":["sort","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"Print a count of case insensitive duplicate filenames in the current directory","cmd":"ls -1 | tr '[A-Z]' '[a-z]' | sort | uniq -c | grep -v \" 1 \"","cmdset":["grep","uniq","sort","ls","tr"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print a list of all duplicate case insensitive file paths in the current directory tree","cmd":"find . | sort -f | uniq -i -d","cmdset":["sort","find","uniq"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print a listing of the `other' directory","cmd":"find other -maxdepth 1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print a sorted list of regular files from directory tree \/folder\/of\/stuff","cmd":"find \/folder\/of\/stuff -type f | sort","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print a tab separated table in \"table.txt\" with cell borders","cmd":"sed -e 's\/\\t\/_|\/g' table.txt |  column -t -s '_' | awk '1;!(NR%1){print \"-----------------------------------------------------------------------\";}'","cmdset":["sed","column","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables","cmd":"od -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20","cmdset":["sort","head","od","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"Print all directories under $root appending a : (colon) at the end of each path","cmd":"find $root -type d -printf '%p:'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print all file\/directory names without white space safety under the \/proc directory","cmd":"find \/proc | xargs","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print all filenames under \/proc and below","cmd":"find \/proc | xargs","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print all files in the current directory as a comma separated list","cmd":"ls -1 | paste -sd \",\" -","cmdset":["paste","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'","cmd":"tac file | awk '\/pattern\/{print;exit}1' | tac","cmdset":["awk","tac"],"cmdcath":["TXTPROC"]}
{"invocation":"Print all unique strings in $1.tmp file.","cmd":"cat $1.tmp | sort -u","cmdset":["sort","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Print amount of space available on the file system containg path to the current working directory.","cmd":"df . | awk '$3 ~ \/[0-9]+\/ { print $4 }'","cmdset":["df","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print base name of the file name without all extensions.","cmd":"basename \"$FILE\" | cut -d'.' -f-1","cmdset":["basename","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print canonical filename of \"\/path\/here\/..\"","cmd":"readlink -f  \/path\/here\/..","cmdset":["readlink"],"cmdcath":["SHUTIL"]}
{"invocation":"Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=","cmd":"find . -type f -exec echo chmod u=rw,g=r,o= '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print comma separated gaps in file \"file\" that contains new line separated ordered numbers","cmd":"seq $(tail -1 file)|diff - file|grep -Po '.*(?=d)'","cmdset":["seq","diff","grep","tail"],"cmdcath":["TXTPROC"]}
{"invocation":"Print common characters in variable \"$a\" and \"$b\"","cmd":"comm -12 <(echo $a|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}') <(echo $b|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}')|tr -d '\\n'","cmdset":["comm","tr"],"cmdcath":["TXTPROC"]}
{"invocation":"Print content of all files ending with '*.foo' in current directory recursively","cmd":"find . -name '*.foo' -exec cat {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print content of all files found regarding seach options '[whatever]'","cmd":"find [whatever] | xargs cat","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space","cmd":"diff -bur folder1\/ folder2\/","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Print each character in \"Hello\" as a hexadecimal value","cmd":"echo -n \"Hello\" | od -A n -t x1","cmdset":["echo","od"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print each character in \"orange\" on a new line","cmd":"echo orange | fold -w 1","cmdset":["echo","fold"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print each line in \"file1\" and file2\" separated by tabs and \"file3\" separated by a space","cmd":"paste -d\" \" file1 file2 | paste -d'|' - file3 | sed 's,|, ,g'","cmdset":["sed","paste"],"cmdcath":["TXTPROC"]}
{"invocation":"Print each line in \"file1\" whose first word does not exist as the first word of any line in \"file2\"","cmd":"join -v 1 <(sort file1) <(sort file2)","cmdset":["join"],"cmdcath":["TXTPROC"]}
{"invocation":"Print each logged in user's full name","cmd":"finger | awk 'NR>1{print $2,$3}'","cmdset":["awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Print each unique line that is duplicated in files \"file1\" and \"file2\" combined","cmd":"sort file1 file2 | uniq -d","cmdset":["sort","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"Print epoch seconds for given time string \"Oct 21 1973\"","cmd":"date -d \"Oct 21 1973\" +%s","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"Print every two lines in \"file\" on a single line separated by a space","cmd":"cat file | paste -d' ' - -","cmdset":["cat","paste"],"cmdcath":["TXTPROC"]}
{"invocation":"Print file information of the executable file of command \"g++\"","cmd":"ls `which g++` -al","cmdset":["which","ls"],"cmdcath":["HELPDOC","FDOPS"]}
{"invocation":"Print file name without the last two extensions assuming the file name doesn't contain any other dots.","cmd":"echo \"$FILE\" | cut -d'.' --complement -f2-","cmdset":["echo","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print file system disk space usage in human readable format of the root filesystem","cmd":"df -h \/","cmdset":["df"],"cmdcath":["SYSINFO"]}
{"invocation":"Print file type information of the \"java\" executable","cmd":"cat `which java` | file -","cmdset":["which","cat","file"],"cmdcath":["SYSINFO","TXTPROC","HELPDOC"]}
{"invocation":"Print flow of random data, showing all non-printing characters","cmd":"cat -v \/dev\/urandom","cmdset":["cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Print fourth column of space-separated data from text file text.txt.","cmd":"cat text.txt | cut -d \" \" -f 4","cmdset":["cat","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Print full path of command \"programname\"","cmd":"which programname","cmdset":["which"],"cmdcath":["HELPDOC"]}
{"invocation":"Print host name without a newline","cmd":"echo -n `hostname`","cmdset":["echo","hostname"],"cmdcath":["SYSINFO","SHUTIL"]}
{"invocation":"Print information of the process running the current script as the current user","cmd":"ps -ef | grep $0 | grep $(whoami)","cmdset":["ps","grep","whoami"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'","cmd":"echo 0a.00.1 usb controller some text device 4dc9 | rev | cut -b1-4 | rev","cmdset":["rev","echo","cut"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print lines 10000 to 10010 from input \"seq 1 100000\"","cmd":"seq 1 100000 | tail -n +10000 | head -n 10","cmdset":["seq","head","tail"],"cmdcath":["TXTPROC"]}
{"invocation":"Print lines in the sorted contents of \"a.txt\" that are not in the sorted contents of \"b.txt\"","cmd":"comm -23 <(sort a.txt) <(sort b.txt)","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Print list of disk and mountpoint of disks matching \"\/dev\/sd*\"","cmd":"mount | awk '\/\\\/dev\\\/sd\/ {print NR, $1, $3}'","cmdset":["mount","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print login name and full name of all users currently logged in","cmd":"finger -l | awk '\/^Login\/'","cmdset":["awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Print ls output for all non-empty files under under current directory","cmd":"find . -type f ! -size 0 -exec ls -l '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print numbers from 1 to 100","cmd":"seq 1 100","cmdset":["seq"],"cmdcath":["TXTPROC"]}
{"invocation":"Print numbers from 1 to 5 without separating spaces","cmd":"seq 5 | awk '{printf \"%s\", $0} END {print \"\"}'","cmdset":["seq","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Print only common file names in sorted listings of directory 'dir1' and 'dir2'","cmd":"comm -1 -2 <(ls \/dir1 | sort) <(ls \/dir2 | sort)","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Print only printable characters from \"\/dev\/urandom\"","cmd":"cat \/dev\/urandom | tr -dC '[:graph:]'","cmdset":["cat","tr"],"cmdcath":["TXTPROC"]}
{"invocation":"Print out ln commands for each file in \/home\/folder1\/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names","cmd":"find \/home\/folder1\/*.txt -type f | awk -F '.txt' '{printf \"ln -s %s %s_CUSTOM_TEXT.txt\\n\", $0, $1}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print summary of files present only in dir1.","cmd":"diff -rq dir1 dir2 | grep 'Only in dir1\/'","cmdset":["diff","grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Print symlink resolved script file name","cmd":"echo $(basename $(readlink -nf $0))","cmdset":["basename","echo","readlink"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the PIDs of the current user's instances of \"firefox\"","cmd":"ps -u $(whoami) | grep firefox | awk '{printf $1}'","cmdset":["ps","grep","whoami","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print the average round trip time of 5 pings to \"google.com\"","cmd":"ping -q -c 5 google.com | tail -n 1 | cut -f 5 -d '\/'","cmdset":["ping","tail","cut"],"cmdcath":["NET","TXTPROC"]}
{"invocation":"Print the commands that would execute \"myfile\" on all .ogv files from the current directory tree","cmd":"find .\/ -name *.ogv -exec echo myfile {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the contents of \"file\" in reverse order","cmd":"nl file | sort -nr | cut -b8-","cmdset":["sort","nl","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the contents of \"filename\"","cmd":"cat filename","cmdset":["cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the contents of \"n\"","cmd":"cat n","cmdset":["cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the current directory tree","cmd":"tree","cmdset":["tree"],"cmdcath":["FDOPS"]}
{"invocation":"Print the current directory tree with file sizes","cmd":"tree -s","cmdset":["tree"],"cmdcath":["FDOPS"]}
{"invocation":"Print the current working directory prepended by \"pwd: \"","cmd":"echo pwd: `pwd`","cmdset":["echo","pwd"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the current working directory without a trailing newline","cmd":"echo -n $(pwd)","cmdset":["echo","pwd"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the date followed by the host name","cmd":"echo `date` `hostname`","cmdset":["date","echo","hostname"],"cmdcath":["SYSINFO","SHUTIL"]}
{"invocation":"Print the directory name of the full real path to the current script","cmd":"echo \"dirname\/readlink: $(dirname $(readlink -f $0))\"","cmdset":["echo","readlink","dirname"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the directory name of the physical current working directory","cmd":"dirname `pwd -P`","cmdset":["dirname","pwd"],"cmdcath":["FDOPS"]}
{"invocation":"Print the file 'text1;text2;text3' replacing each space(\" \") with a newline","cmd":"cat \"text1;text2;text3\" | sed -e 's\/ \/\\n\/g'","cmdset":["sed","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the file paths and their sizes for all files under full_path_to_your_directory","cmd":"find full_path_to_your_directory -type f -printf '%p %s\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the filenames taken by the glob pattern * with null character as the delimiter","cmd":"find * -maxdepth 0 -type d -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the first 32 hexadecimal characters from \"\/dev\/urandom\", determining C locale for character handling functions","cmd":"cat \/dev\/urandom | env LC_CTYPE=C tr -cd 'a-f0-9' | head -c 32","cmdset":["cat","head","env"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print the first 5 decompressed lines of compressed file \"$line\"","cmd":"zcat \"$line\" | head -n5","cmdset":["head","zcat"],"cmdcath":["TXTPROC","ARCH"]}
{"invocation":"Print the first two bytes of \"my_driver\" in octal","cmd":"od --read-bytes=2 my_driver","cmdset":["od"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the full path directory name of each \"file.ext\" found under the current directory","cmd":"find . -name \"file.ext\" -execdir pwd ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the input \"hello world\" followed by a swap of the first two awk fields","cmd":"echo hello world | tee  >(awk '{print $2, $1}')","cmdset":["echo","tee"],"cmdcath":["SHUTIL"]}
{"invocation":"Print the largest 20 files under current directory","cmd":"find . -type f -printf '%s %p\\n' | sort -rn | head -20","cmdset":["sort","head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print the last 10 lines of \"great-big-file.log\"","cmd":"tail great-big-file.log","cmdset":["tail"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the last space separated word from \"a b c d e\"","cmd":"echo \"a b c d e\" | tr ' ' '\\n' | tail -1","cmdset":["echo","tr","tail"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print the list of 1st level subdirectories in \/fss\/fin","cmd":"find \/fss\/fin -d 1 -type d -name \"*\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the list of files and directories of the current directory","cmd":"find . ! -name . -prune","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the list of regular files from the current directory that were last modified on November, 22","cmd":"find . -maxdepth 1 -type f -newermt \"Nov 22\" \\! -newermt \"Nov 23\" -exec echo {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the most repeated line in \"list2.txt\" that exists in \"list1.txt\" prefixed by the number of occurrences","cmd":"grep -Ff list1.txt list2.txt | sort | uniq -c | sort -n | tail -n1","cmdset":["sort","grep","tail","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"Print the mount point of the last mounted drive","cmd":"mount | tail -1 | sed -e \"s\/^[^\/]*\\(.*\\) type .*$\/\\1\/g\"","cmdset":["sed","mount","tail"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print the names of all files in \/some\/directory and its subdirectories recursively whose MIME type is video","cmd":"find \/some\/directory -type f -exec file -N -i -- {} + | sed -n 's!: video\/[^:]*$!!p'","cmdset":["sed","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print the names of the directories from the paths expanded by the glob pattern \/path\/to\/directory\/*","cmd":"find \/path\/to\/directory\/* -maxdepth 0 -type d -exec basename -a {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Print the number of regular files found in the current directory tree","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Print the output of history without line numbers","cmd":"history | sed 's\/^[ ]*[0-9]\\+[ ]*\/\/'","cmdset":["sed","history"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print the output of history without line numbers","cmd":"history|awk '{$1=\"\";print substr($0,2)}'","cmdset":["history","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print the path composed of the current working directory and the directory containing \"$0\"","cmd":"echo `pwd`\/`dirname $0`","cmdset":["pwd","echo","dirname"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the physical current working directory","cmd":"echo \"`pwd -P`\"","cmdset":["echo","pwd"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Print the top 10 commands with their use count","cmd":"history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head","cmdset":["head","history","uniq","sort","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print the total disk usage in bytes of all files listed in \"files.txt\"","cmd":"cat files.txt | xargs du -c | tail -1 | awk '{print $1}'","cmdset":["cat","xargs","tail","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Print the user name of the current user","cmd":"echo `whoami`","cmdset":["echo","whoami"],"cmdcath":["SYSINFO","SHUTIL"]}
{"invocation":"Print the user name of the current user","cmd":"whoami","cmdset":["whoami"],"cmdcath":["SYSINFO"]}
{"invocation":"Print type of the file system containing path $dir.","cmd":"df -T $dir | tail -1 | awk '{print $2;}'","cmdset":["df","tail","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Print unique lines of \"a\" and \"b\"","cmd":"comm -3 a b","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Print unique lines of sorted \"File 1\" compared with sorted \"File 2\"","cmd":"comm -23 \"File 1\" \"File 2\"","cmdset":["comm"],"cmdcath":["TXTPROC"]}
{"invocation":"Print which files differ between dir1 and dir2, treating absent files as empty","cmd":"diff --brief -Nr dir1\/ dir2\/","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Print which files differ in \"\/tmp\/dir1\" and \"\/tmp\/dir2\" recursively","cmd":"diff -qr \/tmp\/dir1\/ \/tmp\/dir2\/","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints a random line from $FILE","cmd":"sort --random-sort $FILE | head -n 1","cmdset":["sort","head"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints a random number between 1 and 10","cmd":"grep -m1 -ao '[0-9]' \/dev\/urandom | sed s\/0\/10\/ | head -n1","cmdset":["sed","head","grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints day of first Tuesday in a month.","cmd":"cal | awk 'NR==2 {for (i=1;i<=NF;i++) {sub(\/ \/,\"\",$i);a[$i]=i}} NR>2 {if ($a[\"Tu\"]~\/[0-9]\/) {printf \"%02d\\n\",$a[\"Tu\"];exit}}' FIELDWIDTHS=\"3 3 3 3 3 3 3 3\"","cmdset":["cal","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Prints file.txt without the last N bytes","cmd":"head -c -N file.txt","cmdset":["head"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints folder where current script is located","cmd":"echo \"dirname: `dirname $0`\"","cmdset":["echo","dirname"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Prints full path to files in a current folder.","cmd":"ls -d $PWD\/*","cmdset":["ls"],"cmdcath":["FDOPS"]}
{"invocation":"Prints information about user $euids currently on machine and its processes, without printing header.","cmd":"w -h $euids","cmdset":["w"],"cmdcath":["SYSINFO"]}
{"invocation":"Prints last modified file in a current folder with modification time.","cmd":"find . -type f | sed 's\/.*\/\"&\"\/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1","cmdset":["sed","find","sort","xargs","tail","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Prints listing of a root folder including hidden files, and saves output to 'output.file'.","cmd":"ls -a | tee output.file","cmdset":["tee","ls"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Prints long listing of content in the current folder with C-style escapes for nongraphic characters","cmd":"ls -lb","cmdset":["ls"],"cmdcath":["FDOPS"]}
{"invocation":"Prints long listing of top ten most memory using processes in a system.","cmd":"ps -e -orss=,args= | sort -nr | head","cmdset":["sort","ps","head"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Prints process tree of a current process with id numbers and parent processes.","cmd":"pstree -sp $$","cmdset":["pstree"],"cmdcath":["SYSINFO"]}
{"invocation":"Prints process tree with command line arguments of a process having id $PID.","cmd":"pstree -a \"$PID\"","cmdset":["pstree"],"cmdcath":["SYSINFO"]}
{"invocation":"Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.","cmd":"pstree | grep MDSImporte | less -SEX","cmdset":["pstree","grep","less"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Prints random line from file $FILE.","cmd":"sort --random-sort $FILE | head -n 1","cmdset":["sort","head"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","cmd":"du -h --max-depth=1 . | sort -n -r","cmdset":["du","sort"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Prints strings with text \"texthere\" in all files recursively in a current folder.","cmd":"grep -r \"texthere\" .","cmdset":["grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Prints the absolute directory path of the current script preceded by the string \"dirname\/readlink: \"","cmd":"echo \"dirname\/readlink: $(dirname $(readlink -f $0))\"","cmdset":["echo","readlink","dirname"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Prints the day of last Friday in a current month.","cmd":"cal | awk '$6{date=$6}END{print date}'","cmdset":["cal","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Prints top-ten list of most used utilities from history.","cmd":"history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head","cmdset":["head","history","uniq","sort","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Prints total number of lines of all *.php files in a current folder and subfolders.","cmd":"cat `find . -name \"*.php\"` | wc -l","cmdset":["wc","cat","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Prints what day it was 222 days ago","cmd":"date --date=\"222 days ago\" +\"%d\"","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"Prints what year it was 222 days ago","cmd":"date --date=\"222 days ago\" +\"%Y\"","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"Puts the job 1 in the background.","cmd":"bg %1 [puts the job in the background]","cmdset":["bg"],"cmdcath":["PROCCTRL"]}
{"invocation":"Query SRV records for domain '_kerberos._udp.foo.com'","cmd":"dig -t SRV _kerberos._udp.foo.com","cmdset":["dig"],"cmdcath":["NET"]}
{"invocation":"Raise an error for using uninitialized variables","cmd":"set -u","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line from standard input","cmd":"read","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line from standard input into variable \"REPLY\" with prompt \"$1 ([y]es or [N]o): \"","cmd":"read -p \"$1 ([y]es or [N]o): \"","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line from standard input into variable \"password\" without echoing the input and using the prompt \"Password: \"","cmd":"read -s -p \"Password: \" password","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line from standard input with prompt \"Are you alright? (y\/n) \" and save the response to variable \"RESP\"","cmd":"read -p \"Are you alright? (y\/n) \" RESP","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line from standard input with prompt \"Enter your choice: \", arrow keys enabled, and \"yes\" as the default input, and save the response to variable \"choice\"","cmd":"read -e -i \"yes\" -p \"Enter your choice: \" choice","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a line of standard input into variable \"input_cmd\" with prompt \"command : \"","cmd":"read -p \"command : \" input_cmd","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a single character from standard input into variable \"doit\" with prompt \"Do that? [y,n]\"","cmd":"read -n1 -p \"Do that? [y,n]\" doit","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read a single character from standard input into variable \"key\" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y\/n) : ' and default value $'Y'","cmd":"read -rp $'Are you sure (Y\/n) : ' -ei $'Y' key","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row","cmd":"awk 'FNR==NR { array[$1]++; next } { n = asorti(array,sort); for (i=1; i<=n; i++) if (sort[i] <= $1 + 10 && sort[i] >= $1 - 10 && $1 != sort[i]) line = (line ? line \",\" : line) sort[i]; print $0, line; line = \"\" }' file.txt{,} | column -t","cmdset":["column","awk"],"cmdcath":["TXTPROC"]}
{"invocation":"Read line from file descriptor 4 and store received input in 'line' variable","cmd":"read -u 4 line","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read one character from standard input into variable \"REPLY\"","cmd":"read -n1","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Read the history file and append the contents to the history list","cmd":"history -r","cmdset":["history"],"cmdcath":["SYSINFO"]}
{"invocation":"Recursively change owner and group to \"$JBOSS_AS_USER\" of \"$JBOSS_AS_DIR\/\"","cmd":"chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR\/","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change owner to \"www-data\" of \"\/var\/www\/.gnome2\", \"\/var\/www\/.config\", and \"\/var\/www\/.config\/inkscape\"","cmd":"chown -R www-data \/var\/www\/.gnome2 \/var\/www\/.config \/var\/www\/.config\/inkscape","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change ownership of \"\/usr\/lib\/node_modules\/\" to the current user","cmd":"sudo chown -R $(whoami) \/usr\/lib\/node_modules\/","cmdset":["sudo","whoami"],"cmdcath":["SYSINFO","SECOP"]}
{"invocation":"Recursively change the group of all files in \"\/var\/lib\/php\/session\" to \"lighttpd\"","cmd":"chown -R :lighttpd \/var\/lib\/php\/session","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change the group ownership to \"laravel\" in \".\/bootstrap\/cache\"","cmd":"sudo chown -R :laravel .\/bootstrap\/cache","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change the owner and group of all files in \"\/your\/directory\/to\/fuel\/\" to \"nginx\"","cmd":"chown nginx:nginx \/your\/directory\/to\/fuel\/ -R","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change the owner of all \"*.txt\" files under \"\/mydir\" to \"root\"","cmd":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively change the owner to \"$USER\" and group to \"$GROUP\" of \"\/var\/log\/cassandra\"","cmd":"sudo chown -R  $USER:$GROUP \/var\/log\/cassandra","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change the owner to \"user\" and group to \"www-data\" of \"yourprojectfoldername\"","cmd":"chown -R user:www-data yourprojectfoldername","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Recursively change the ownership of all directories in the current directory excluding \"foo\" to \"Camsoft\"","cmd":"ls -d * | grep -v foo | xargs -d \"\\n\" chown -R Camsoft","cmdset":["grep","xargs","ls"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Recursively changes group ownership of every folder in a current directory to the name of that folder.","cmd":"find . -type d | sed -e 's\/^\\.\\\/\/\/g' | awk '{print $1, $1}' | xargs chgrp","cmdset":["sed","find","xargs","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Recursively changes group ownership of everything in '\/home\/secondacc\/public_html\/community\/' to 'fancyhomepage'.","cmd":"chgrp -R fancyhomepage \/home\/secondacc\/public_html\/community\/","cmdset":["chgrp"],"cmdcath":["SECOP"]}
{"invocation":"Recursively compresses all files within $2 folder.","cmd":"find $2 -type f -exec bzip2 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively copies \"$1\" to \"$2\".","cmd":"cp -R \"$1\" \"$2\"","cmdset":["cp"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively copies 'SRCFOLDER' to the 'DESTFOLDER\/'","cmd":"cp -R SRCFOLDER DESTFOLDER\/","cmdset":["cp"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively copy \"emptydir\" to \"destination\/newdir\"","cmd":"rsync --recursive emptydir\/ destination\/newdir","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Recursively copy local file\/directory \"\/copy\/from\/path\" to remote location \"\/copy\/to\/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"\/path\/to\/your\/.pemkey\" instead of the default in ~\/.ssh\/","cmd":"scp -i \/path\/to\/your\/.pemkey -r \/copy\/from\/path user@server:\/copy\/to\/path","cmdset":["scp"],"cmdcath":["NET"]}
{"invocation":"Recursively find the latest modified file in the current directory","cmd":"find . -type f -print0|xargs -0 ls -drt|tail -n 1","cmdset":["find","xargs","tail"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.","cmd":"grep -rnw \"pattern\"","cmdset":["grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Recursively finds all '*.pdf' files in a current folder and removes them.","cmd":"find . -name \"*.pdf\" -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively finds all '*.pdf' files in a current folder and removes them.","cmd":"find . -name \"*.pdf\" -print0 | xargs -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Recursively finds all *.dbf files from the root folder and prints list of folders with such files.","cmd":"find \/ -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq","cmdset":["sort","find","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Recursively finds all files and prints all strings with 'text-to-find-here' from that files.","cmd":"find \/ -type f | xargs grep 'text-to-find-here'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.","cmd":"find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm '{}' +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively finds in all folders but \".\/output\/*\" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.","cmd":"find .  \\( ! -path \".\/output\/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Recursively finds string with text \"foo\" in all files of a current folder.","cmd":"find .\/ -type f | xargs grep \"foo\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.","cmd":"grep -insr \"pattern\" *","cmdset":["grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Recursively list contents of the current directory in a tree-like format","cmd":"tree","cmdset":["tree"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively print all directories in the current directory tree","cmd":"tree -d","cmdset":["tree"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively remove all \"*.txt\" files and answer \"y\" to any prompt","cmd":"yes | rm -r *.txt","cmdset":["rm","yes"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Recursively removes all empty folders under current folder.","cmd":"find -depth -type d -empty -exec rmdir {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively removes all files like '*.pyc' in a current folder.","cmd":"rm `find . -name \\*.pyc`","cmdset":["rm","find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively removes all files like '*.xyz' in a current folder.","cmd":"find . -name \\*.xyz -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Recursively set all permissions under \"..\/tools\" to 777","cmd":"chmod -R 777 ..\/tools","cmdset":["chmod"],"cmdcath":["SECOP"]}
{"invocation":"Remount \"\/dev\/shm\" with a maximum size of \"40G\"","cmd":"mount -o remount,size=40G \/dev\/shm","cmdset":["mount"],"cmdcath":["SYSINFO"]}
{"invocation":"Remove \"_dbg\" from all file or directory names under the current directory","cmd":"rename _dbg.txt .txt **\/*dbg*","cmdset":["rename"],"cmdcath":["FDOPS"]}
{"invocation":"Remove ESC key bind","cmd":"bind -r '\\e'","cmdset":["bind"],"cmdcath":["SHUTIL"]}
{"invocation":"Remove all 'a.out', '*.o', and 'core' files in the current directory tree","cmd":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all *.mp3 files in tmp directory but not in it's subdirectories","cmd":"find tmp -maxdepth 1 -name *.mp3 -print0 | xargs    -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove all *.swp files under current directory","cmd":"find . -name \"*.swp\"|xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove all *.txt files under the given directory modified more than 5 minutes ago","cmd":"find \/home\/u20806\/public_html -maxdepth 1 -mmin +5 -type f -name \"*.txt\" -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all a.out, *.o, and core files under the current directory","cmd":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all empty sub-directories under current directory","cmd":"find . -depth  -type d  -empty -exec rmdir {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all files and directories in the current directory by answering with \"y\" to all prompts","cmd":"yes | \/bin\/rm -i *","cmdset":["yes"],"cmdcath":["SHUTIL"]}
{"invocation":"Remove all files except the ones listed in \"MANIFEST\"","cmd":"find -type f -printf %P\\\\n | sort | comm -3 MANIFEST - | xargs rm","cmdset":["comm","sort","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Remove all files in the \/myfiles directory tree that were accessed at least 30 days ago","cmd":"find \/myfiles -atime +30 -exec rm {} ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all files last modified more than 10 days ago from the current directory tree","cmd":"find . -mtime +10 | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove all files under $DIR that were accessed more than 5 days ago","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all files under \/home\/user\/Maildir\/.SPAM\/cur","cmd":"find \/home\/user\/Maildir\/.SPAM\/cur -type f -exec rm '{}' +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all files under \/home\/user\/Maildir\/.SPAM\/cur","cmd":"find \/home\/user\/Maildir\/.SPAM\/cur -type f | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove all files under current directory","cmd":"find -exec rm '{}' +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all regular files found in and below \/path","cmd":"find \/path -type f -exec rm '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt","cmd":"find . -type f ! -regex \".*\/\\(textfile.txt\\|backup.tar.gz\\|script.php\\|database.sql\\|info.txt\\)\" -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all regular files under $DIR directory tree that were accessed more than 5 days ago","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all regular files under and below directory \"$DIR\" that were last accessed more than 5 days ago","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove all tmp\/*.mp3 files","cmd":"find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs -n1 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove all tmp\/*.mp3 files","cmd":"find tmp -maxdepth 1 -name *.mp3 -print0 | xargs -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove each unique item listed on standard input and do nothing if empty","cmd":"sort | uniq -u | xargs -r rm","cmdset":["sort","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Remove empty folder, and skip error message if one is not empty.","cmd":"rmdir --ignore-fail-on-non-empty newBaseDir\/Data\/NewDataCopy","cmdset":["rmdir"],"cmdcath":["FDOPS"]}
{"invocation":"Remove everything in a current folder without prompting.","cmd":"rm -rf *","cmdset":["rm"],"cmdcath":["FDOPS"]}
{"invocation":"Remove files in current directory according to the filenames found in ~\/clang+llvm-3.3\/bin\/","cmd":"find ~\/clang+llvm-3.3\/bin\/ -type f -exec basename {} \\; | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove files named \"core\" from the \/work directory tree and write their names to \/dev\/stderr (the standard error","cmd":"find \/work \\( -fprint \/dev\/stderr \\) , \\( -name 'core' -exec rm {} \\; \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove files under \/mnt\/zip matching \"*prets copy\" with confirmation","cmd":"find \/mnt\/zip -name \"*prefs copy\" -print0 | xargs -0 -p \/bin\/rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove files whose names start with `Foo'","cmd":"find . -type f -name \"Foo*\" -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove junk files modified more than 31 days ago recursively","cmd":"find \/path\/to\/junk\/files -type f -mtime +31 -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove junk files modified more than 31 days ago recursively","cmd":"find \/path\/to\/junk\/files -type f -mtime +31 -print0 | xargs -0 -r rm -f","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Remove sequence like '\\xEF\\xBB\\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.","cmd":"find . -type f -exec sed '1s\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove the \"123_\" prefix from all filenames of .txt files in current directory.","cmd":"find -name \"123*.txt\" -exec rename 's\/^123_\/\/' {} \";\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove the \"^M\" characters from all *.ext files under \/home directory","cmd":"find \/home -type f -name \"*.ext\" -exec sed -i -e \"s\/\\r$\/\/g\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove the first 13 characters of each \".txt\" filename in the \"\/tmp\" directory tree and number the output","cmd":"find \/tmp -type f \\( -name '*.txt' \\) |cut -c14- | nl","cmdset":["nl","find","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Remove the regular files from the current directory tree that are newer than \/tmp\/date.start but not newer than \/tmp\/date.end","cmd":"find .\/ -type f -newer \/tmp\/date.start ! -newer \/tmp\/date.end -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove the regular files from the current directory tree that were last modified on November, 21","cmd":"find -type f -newermt \"Nov 21\" ! -newermt \"Nov 22\" -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Remove what follows the forth occurrence of the character \":\" in any field which contains it","cmd":"sed -r 's\/((:[^: \\t]*){3}):[^ \\t]*\/\\1\/g' file | column -t","cmdset":["sed","column"],"cmdcath":["TXTPROC"]}
{"invocation":"Removes '\/var\/lib\/mongodb\/mongod.lock' in 'sudo' mode.","cmd":"sudo rm \/var\/lib\/mongodb\/mongod.lock","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Removes 55, adds a 10-digit line number, and rearranges the date for each line in \"input\" on OSX","cmd":"nl -nrz -w10 -s\\; input | sed -E 's\/55\/\/; s\/([0-9]{2})-([0-9]{2})-([0-9]{4})\/\\3\\2\\1\/'","cmdset":["sed","nl"],"cmdcath":["TXTPROC"]}
{"invocation":"Removes all empty folders under current folder.","cmd":"find . -type d -exec rmdir {}\\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Removes all empty folders under path '\/foo\/bar' and the path itself.","cmd":"find \/foo\/bar -type d -depth -exec rmdir -p {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.","cmd":"find $homeDirData -type d -mmin +10 -print0 | xargs -0 rmdir","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Removes all files from current folder but 5 newest ones.","cmd":"find . -maxdepth 1 -type f -printf '%T@ %p\\0' | sort -r -z -n | awk 'BEGIN { RS=\"\\0\"; ORS=\"\\0\"; FS=\"\" } NR > 5 { sub(\"^[0-9]*(.[0-9]*)? \", \"\"); print }' | xargs -0 rm -f","cmdset":["sort","find","xargs","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Removes all listed folders with content in sudo mode.","cmd":"sudo rm -rf \/usr\/local\/bin\/npm \/usr\/local\/share\/man\/man1\/node* \/usr\/local\/lib\/dtrace\/node.d ~\/.npm ~\/.node-gyp \/opt\/local\/bin\/node opt\/local\/include\/node \/opt\/local\/lib\/node_modules","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Removes everything from current folder but '*ddl*' and '*docs*' files.","cmd":"ls -1|grep -v -e ddl -e docs| xargs rm -rf","cmdset":["grep","xargs","ls"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Removes first and last parts of path $path and saves the result in 'finalName' variable.","cmd":"finalName=$(basename -- \"$(dirname -- \"$path\")\")","cmdset":["basename","dirname"],"cmdcath":["FDOPS"]}
{"invocation":"Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts.","cmd":"find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Removes trailing and starting newlines from file","cmd":"tac file | sed -e '\/.\/,$!d' | tac | sed -e '\/.\/,$!d'","cmdset":["sed","tac"],"cmdcath":["TXTPROC"]}
{"invocation":"Rename \"www_new\" to \"www\" even if \"www\" directory exists","cmd":"mv -T www_new www","cmdset":["mv"],"cmdcath":["FDOPS"]}
{"invocation":"Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end","cmd":"mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg","cmdset":["rev","mv","echo","cut"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory","cmd":"find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's\/jpg$\/jpeg\/i' {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Rename all .png files, changing the string \"_h.png\" into \"_half.png\".","cmd":"rename 's\/_h.png\/_half.png\/' *.png","cmdset":["rename"],"cmdcath":["FDOPS"]}
{"invocation":"Rename all files in current directory whose name starts with 'F0000', trimming a zero from any sequence of four zeroes in the name.","cmd":"rename s\/0000\/000\/ F0000*","cmdset":["rename"],"cmdcath":["FDOPS"]}
{"invocation":"Rename all files in the current directory to the md5 sum followed by the extension and print the conversions","cmd":"md5sum * | sed -e 's\/\\([^ ]*\\) \\(.*\\(\\..*\\)\\)$\/mv -v \\2 \\1\\3\/e'","cmdset":["sed","md5sum"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Rename file file.txt.123456 to file.txt","cmd":"mv file.txt.123456 $(ls file.txt.123456 | rev | cut -c8- | rev)","cmdset":["rev","mv","ls","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Rename file with inode number 31467125 to new_name.html","cmd":"find . -type f -inum 31467125 -exec \/bin\/mv {} new_name.html \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Rename the *.so files at level 2 of the current directory tree prepending their names with \"lib\"","cmd":"find . -mindepth 2 -maxdepth 2 -name \"*.so\" -printf \"mv '%h\/%f' '%h\/lib%f'\\n\" | sh","cmdset":["sh","find"],"cmdcath":["PROGSCRIPT","FDOPS"]}
{"invocation":"Replace \"_\" with newlines in \"Testing\\r_Tested\" and display the named characters","cmd":"echo -e \"Testing\\r_Tested\" | awk -v RS=\"_\" '{ print $0; }' | od -a","cmdset":["echo","od","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Replace all colons (':') with newlines in $list and search for the first match to the regex \"^$removepat\\$\" where $removepat is a variable and save the result to variable 'removestr'","cmd":"removestr=$(echo \"$list\" | tr \":\" \"\\n\" | grep -m 1 \"^$removepat\\$\")","cmdset":["echo","grep","tr"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Replace all commas with tab characters in 'filename.csv' and page interactively through the result.","cmd":"sed \"s\/,\/\\t\/g\" filename.csv | less","cmdset":["sed","less"],"cmdcath":["TXTPROC"]}
{"invocation":"Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in file \"index.html\" and make a backup with suffix \"bak\" on OSX","cmd":"sed -i bak -e s\/STRING_TO_REPLACE\/REPLACE_WITH\/g index.html","cmdset":["sed"],"cmdcath":["TXTPROC"]}
{"invocation":"Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place","cmd":"find . -type f -maxdepth 1 -exec sed -i \"s\/$P_FROM\/$P_TO\/g\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Replace all non-punctuation characters with newlines from standard input","cmd":"tr -sc '[:punct:]' '\\n'","cmdset":["tr"],"cmdcath":["TXTPROC"]}
{"invocation":"Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree","cmd":"find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0 | xargs -0 sed -i '' 's\/2013 Magento Inc.\/2012 Magento Inc.\/g'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '\/myprojects' directory tree and modify them in-place","cmd":"find \/myprojects -type f -name '*.cpp' -print0 | xargs -0 -n 1 sed -i 's\/previousword\/newword\/g'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory","cmd":"find %s -iname *.css | xargs sed -i s\/[Ff][Oo][Oo]\/bar\/g","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Replace all occurrences of word \"foo\" with \"bar\" in *.c and *.h files from the current directory tree","cmd":"find -name '*.[ch]' -exec sed -i 's\/\\<foo\\>\/bar\/g' {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Replace all ocurrences of '<title>' with 'sblmtitle\\n<title>' in all the regular files with '.html' extension under current directory tree","cmd":"find .\/ -type f -name '*.html' | xargs sed -i 's\/<title>\/sblmtitle\\n<title>\/g'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field","cmd":"cat text.txt | tr -s ' ' | cut -d ' ' -f 4","cmdset":["cat","tr","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Replace each new line in \"INPUT.txt\" with \":\"","cmd":"paste -sd: INPUT.txt","cmdset":["paste"],"cmdcath":["TXTPROC"]}
{"invocation":"Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the files from the current directory tree, keeping a backup copy of every touched file","cmd":"find . -type f -print0 | xargs -0 sed -i.bak -e \"s\/HOGE\/MOGA\/\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Report all files in \/mydir1 and \/mydir2 larger than 2000 blocks and accessed in over 30 days","cmd":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Report all files starting in the directories \/mydir1 and \/mydir2 larger than 2,000 blocks that have not been accessed in over 30 days","cmd":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.","cmd":"df $path_in_question | grep \" $path_in_question$\"","cmdset":["df","grep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Report file systems disk usage in 1GB blocks.","cmd":"df -BG","cmdset":["df"],"cmdcath":["SYSINFO"]}
{"invocation":"Report file systems disk usage in kilobytes.","cmd":"df -k","cmdset":["df"],"cmdcath":["SYSINFO"]}
{"invocation":"Report root file system disk usage human-readable.","cmd":"df -h \/","cmdset":["df"],"cmdcath":["SYSINFO"]}
{"invocation":"Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.","cmd":"dig +trace +additional dragon-architect.com | awk 'NR==3' RS=\"\\n\\n\"","cmdset":["dig","awk"],"cmdcath":["NET","TXTPROC"]}
{"invocation":"Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script.","cmd":"dig @ns1.hosangit.com djzah.com +noall +authority +comments | awk -f script.awk","cmdset":["dig","awk"],"cmdcath":["NET","TXTPROC"]}
{"invocation":"Return a list of files newer than file poop","cmd":"find . -mnewer poop","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Returns exit status 0 and prints exit status of previous command.","cmd":"false | echo \"${PIPESTATUS[0]}\"","cmdset":["false","echo"],"cmdcath":["SHUTIL"]}
{"invocation":"Returns unsuccessful exit code on each found file like '*tests*' within current directory.","cmd":"find . -name '*tests*' -print -exec false \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Reverse the order of lines in \"myfile.txt\" using BSD \"tail\" command","cmd":"tail -r myfile.txt","cmdset":["tail"],"cmdcath":["TXTPROC"]}
{"invocation":"Reverse the space separated words in \"aaaa eeee bbbb ffff cccc\"","cmd":"echo \"aaaa eeee bbbb ffff cccc\"|tr ' ' '\\n'|tac|tr '\\n' ' '","cmdset":["echo","tr","tac"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.","cmd":"pushd -2","cmdset":["pushd"],"cmdcath":["FDOPS"]}
{"invocation":"Run \".\/configure\" with a new environment variable CC set to the full path of the command 'gcc'","cmd":"CC=$(which gcc) .\/configure","cmdset":["which"],"cmdcath":["HELPDOC"]}
{"invocation":"Run 'chmod 0755' on all directories in the current directory tree","cmd":"find . -type d -exec chmod 0755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Run an awk program on every TXT file found in the current directory tree","cmd":"find . -name \"*.txt\" -print -exec awk '$9 != \"\" {print; if(NR > 9) exit; }' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.","cmd":"rsync $OPTS $FIND $BACKUPDIR","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"SSH into \"hostname\" on port 22 as user \"myName\"","cmd":"ssh -l myName -p 22 hostname","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"SSH into \"hostname\" on port 22 as user \"myName\"","cmd":"ssh -p 22 myName@hostname","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"Save 'echo whatever you \"want your\" command to be' in history","cmd":"history -s 'echo whatever you \"want your\" command to be'","cmdset":["history"],"cmdcath":["SYSINFO"]}
{"invocation":"Save IP address of your SSH session in variable \"WORKSTATION\"","cmd":"WORKSTATION=`who -m|awk '{print $5}'|sed 's\/[()]\/\/g'`","cmdset":["who","sed","awk"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Save Java home in variable \"JAVA_HOME\"","cmd":"JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin\/.*$::\" )\"","cmdset":["which","sed","readlink"],"cmdcath":["SHUTIL","TXTPROC","HELPDOC"]}
{"invocation":"Save absolute path of \"$path\" that must exist along with all parents to variable \"abspath\"","cmd":"abspath=$(readlink -e $path)","cmdset":["readlink"],"cmdcath":["SHUTIL"]}
{"invocation":"Save absolute path of \"$path\" whose parents exist to variable \"abspath\"","cmd":"abspath=$(readlink -f $path)","cmdset":["readlink"],"cmdcath":["SHUTIL"]}
{"invocation":"Save all directories under the current directory as a comma separated list in variable \"FOLDERS\"","cmd":"FOLDERS=$(find . -type d | paste -d, -s)","cmdset":["find","paste"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Save directory \"..\/..\/lib\" relative to the executable \"gcc\" to variable \"libdir\"","cmd":"libdir=$(dirname $(dirname $(which gcc)))\/lib","cmdset":["which","dirname"],"cmdcath":["HELPDOC","FDOPS"]}
{"invocation":"Save long listing of all files listed in file 'filenames.txt' to 'listing' variable","cmd":"listing=$(ls -l $(cat filenames.txt))","cmdset":["cat","ls"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Save number of lines in '\/some\/big\/file' to 'LINES' variable","cmd":"LINES=$(cat \/some\/big\/file | wc -l)","cmdset":["wc","cat"],"cmdcath":["TXTPROC"]}
{"invocation":"Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.","cmd":"big_lines=`cat foo.txt | grep -c \"$expression\"`","cmdset":["cat","grep"],"cmdcath":["TXTPROC"]}
{"invocation":"Save the absolute path of the current script to variable \"SELF\"","cmd":"script=\"`readlink -f \"${BASH_SOURCE[0]}\"`\"","cmdset":["readlink"],"cmdcath":["SHUTIL"]}
{"invocation":"Save the current date, system host name, and \"$changes\" with newlines removed to variable \"subj\"","cmd":"subj=\"$(date) - $(hostname) - $(echo \"$changes\" | sed \"s\/$\/,\/\" | tr \"\\n\" \" \")\"","cmdset":["sed","hostname","date","echo","tr"],"cmdcath":["SYSINFO","SHUTIL","TXTPROC"]}
{"invocation":"Save the day of the year from the time string \"20131220\" to variable 'DATECOMING'","cmd":"DATECOMING=$(echo `date -d \"20131220\" +%j`)","cmdset":["date","echo"],"cmdcath":["SYSINFO","SHUTIL"]}
{"invocation":"Save the directory of the full path to the current script in variable \"dir\"","cmd":"dir=$(dirname $(readlink -m $BASH_SOURCE))","cmdset":["readlink","dirname"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Save the first \".\" separated field of the system host name to variable \"HOSTZ\"","cmd":"HOSTZ=$( hostname | cut -d. -f1 )","cmdset":["hostname","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Save the first three octets of the host name's IP address to variable \"subnet\"","cmd":"subnet=$(hostname -i | cut -d. -f1,2,3)","cmdset":["hostname","cut"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Save the full path of command \"oracle\" to variable \"path\"","cmd":"path=`which oracle`","cmdset":["which"],"cmdcath":["HELPDOC"]}
{"invocation":"Save the number of bytes in \"$file\" after decompression into variable \"size\"","cmd":"size=\"$(zcat \"$file\" | wc -c)\"","cmdset":["wc","zcat"],"cmdcath":["TXTPROC","ARCH"]}
{"invocation":"Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\"","cmd":"packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')","cmdset":["ping","grep"],"cmdcath":["NET","TXTPROC"]}
{"invocation":"Save the physical current working directory to variable \"END_ABS\"","cmd":"END_ABS=`pwd -P`","cmdset":["pwd"],"cmdcath":["FDOPS"]}
{"invocation":"Save the system host name into variable \"HOST\"","cmd":"HOST=$(hostname)","cmdset":["hostname"],"cmdcath":["SYSINFO"]}
{"invocation":"Saves calendar of $month, $year in the 'cal' variable.","cmd":"cal=$(echo $(cal \"$month\" \"$year\"))","cmdset":["cal","echo"],"cmdcath":["SHUTIL"]}
{"invocation":"Saves in 'result' variable list of groups which user $line belongs to, and not matching pattern \"_unknown|sciences|everyone|netaccounts\"","cmd":"result=$(groups \"$line\" | sed 's\/ \/\\n\/g' | egrep -v \"_unknown|sciences|everyone|netaccounts\")","cmdset":["sed","groups","egrep"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Search  in current directory downwards all files which  have not been accessed since last 7 days","cmd":"find . -atime +7 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search $MYGROUP in \/etc\/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'","cmd":"MYUSERS=`grep $MYGROUP \/etc\/group | cut -d \":\" -f4| tr \",\" \"\\n\"`","cmdset":["tr","grep","cut"],"cmdcath":["TXTPROC"]}
{"invocation":"Search \/etc for files modified within the last day","cmd":"find \/etc -type f -ctime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search all *.c files from the current directory tree for \"hogehoge\"","cmd":"find . -name \\*.c -print0 | xargs -0 grep hogehoge \/dev\/null","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search all files and   directories either of the directory \/home\/oracle and  \/home\/databse which  contain the \"zip\"  anywhere in the files or directory name .","cmd":"find \/home\/oracle \/home\/database -name '*zip*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search all files from the \/tmp directory tree for the string \"search string\"","cmd":"find \/tmp -type f -exec grep 'search string' '{}' \/dev\/null \\+","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search all files in the current directory tree whose names end in \"1\" for string \"1\"","cmd":"find . -name \"*1\" -print0 |xargs -0 grep \"1\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search all of \/usr for any directory named 'My Files', for each directory found, copy it to \/iscsi preserving full paths and attributes.","cmd":"find \/usr -type d -name My\\ Files -exec rsync -avR '{}' \/iscsi \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search core files in current direcory and delete .","cmd":"find . -name core -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search directories \/res\/values-en-rUS and \/res\/xml for XML files","cmd":"find \/res\/values-en-rUS \/res\/xml -iname '*.xml'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search directory tree \/srv\/${x} for regular files accessed at least 10080 minutes ago, and remove those files","cmd":"find \/srv\/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search directory trees foo and bar for .java files","cmd":"find foo bar -name \"*.java\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for \"1234567890\" in every gzip file modified between 8:00 and 9:00 on 2014-04-30","cmd":"find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00' |xargs gunzip -c | grep 1234567890","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Search for \"search term\" in a sorted list of all files under current directory","cmd":"find . | awk '{FS = \"\/\" ; print \"\", NF, $F}' | sort -n  | awk '{print $2}' | xargs grep -d skip \"search term\"","cmdset":["sort","find","xargs","awk"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Search for \"whatever\" in all files under \/dir directory ensuring white space safety in filenames","cmd":"find \/dir -type f -print0 | xargs -0i cat {} | grep whatever","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Search for 'invalidTemplateName' in all regular files in directories\/files taken from the glob pattern '.\/online_admin\/*\/UTF-8\/*' and show the matched lines with the filenames","cmd":"find .\/online_admin\/*\/UTF-8\/* -type f -exec grep -H \"invalidTemplateName\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for 'js' in all files under current directory that match 'some string' in their names","cmd":"find . | grep 'some string' | grep js","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Search for 'stuff' in all *,txt files under current directory","cmd":"find . -name \"*.txt\" -print0 | xargs -0 egrep 'stuff'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search for .pdf files","cmd":"find \/ -name '*.pdf'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for all files newer than file \/tmp\/t","cmd":"find \/ -newer \/tmp\/t","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for all jpg images on the system and archive them","cmd":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory","cmd":"find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox\/Messages' ';' -exec sh -c 'mv {}.mbox\/*.emlx {}.mbox\/Messages' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for all zero-byte files and move them to the \/tmp\/zerobyte folder","cmd":"find test -type f  -size 0 -exec mv {} \/tmp\/zerobyte \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for file \"file\" between level 2 and 3 of the directory tree","cmd":"find -mindepth 2 -maxdepth 3 -name file","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for file names with \"bad\" characters in the current directory and delete the files.","cmd":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for files in your home directory which have been modified in the last twenty-four hours","cmd":"find $HOME  -mtime 0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for files in your home directory which have been modified in the last twenty-four hours.","cmd":"find $HOME  -mtime 0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for files that are at least 100MB","cmd":"find \/ -size +100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for files\/directories with the case insensitive pattern anaconda.* in \/var\/log","cmd":"find \/var\/log\/ -iname anaconda.*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for non-empty files","cmd":"find . ! -size 0k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for occurrences of string \"main(\" in the .c files from the current directory tree","cmd":"find . -name \"*.c\" -print | xargs grep \"main(\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search for occurrences of string \"main(\" in the .c files from the current directory tree","cmd":"find . -type f -name \"*.c\" -print -exec grep -s \"main(\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files","cmd":"find . -print | xargs grep -l -i \"PATTERN\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search for the files\/directories that were modified more than an hour ago","cmd":"find . -mtime +1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for the pattern 'search string' in all the files in the ''\/tmp folder and display the matched lines along with the file names","cmd":"find \/tmp -type f -exec grep 'search string' '{}' \/dev\/null \\+","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","cmd":"find . -type f -exec grep \"magic\" {} \\; -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search regular files from the \/path\/to\/dir directory tree for lines that contain \"_START\" and are enclosed in lines \"@GROUP\" and \"@END_GROUP\"","cmd":"find \/path\/to\/dir -type f -exec sed '\/@GROUP\/,\/@END_GROUP\/!d' {} + | grep '_START'","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Search regular files from the \/path\/to\/dir directory tree for lines that contain \"_START\" and are enclosed in lines \"@GROUP\" and \"@END_GROUP\"","cmd":"find \/path\/to\/dir -type f -exec sed '\/@GROUP\/,\/@END_GROUP\/!d' {} \\; | grep '_START'","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Search the *.cc files in the current directory tree for string \"xxx\"","cmd":"find . -name \"*.cc\" -print -exec grep \"xxx\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the *.code files from the current directory tree for string 'pattern'","cmd":"find . -name '*.code' -print0 | xargs -0 grep -H 'pattern'","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the .VER files from the current directory tree for Perl regular expression \"Model-Manufacturer:.\\n.\"","cmd":"find . -name \"*.VER\" -exec grep -P 'Model-Manufacturer:.\\n.' '{}' ';' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the .c files residing in the Lib\/ directory tree for lines beginning with \"PyErr\"","cmd":"find Lib\/ -name '*.c' -print0 | xargs -0 grep ^PyErr","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the .sh files in the current directory tree for string \"ksh\"","cmd":"find . -name \"*.sh\" | xargs grep \"ksh\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the \/Path directory tree for files matching pattern \"file_name*\"","cmd":"find \/Path -name \"file_name*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/myfiles directory tree for files whose names contain \"blue\"","cmd":"find \/myfiles -name '*blue*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/path directory tree for files lacking the group writable bit","cmd":"find \/path ! -perm \/020","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/path directory tree for files lacking the group writable bit","cmd":"find \/path ! -perm \/g+w","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/path directory tree for files missing g+w or o+w bits","cmd":"find \/path ! -perm -022","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/path directory tree for files that do not have a valid user or group","cmd":"find \/path -nouser -or -nogroup","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the \/path\/to\/dir directory tree for .c files","cmd":"find \/path\/to\/dir -name \\*.c","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory and two levels below for file `teste.tex'","cmd":"find ~\/ -maxdepth 3 -name teste.tex","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory for all files with no 'read' privilege for 'others'","cmd":"find . -maxdepth 1 ! -perm  -o=r","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for *.txt files with lines that match regular expression \"^string\"","cmd":"find . -name \"*.txt\" -exec egrep -l '^string' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","cmd":"find \"$(pwd -P)\" -mtime 0 -not \\( -name '*.swp' -o -regex '.\/es.*' -o -regex '.\/en.*' \\)","cmdset":["find","pwd"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","cmd":"find -mtime 0 -not \\( -name '*.swp' -o -path '.\/es*' -o -path '.\/en*' \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for regular files last accessed more than 2 days ago","cmd":"find . type -f -atime +2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.","cmd":"find . -type f -ctime -3 | tail -n 5","cmdset":["find","tail"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Search the current directory recursively for regular files with the read permission set for everybody","cmd":"find -type f ! -perm -444","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory recursively for text files containing at least one character","cmd":"find . -type f -exec grep -Iq . {} \\; -and -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for *bash* files printing them on a single line","cmd":"find . -name \"*bash*\" | xargs","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the current directory tree for .log files containing the string \"The SAS System\" on the first line","cmd":"find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{\/The SAS System\/q0};q1' {} \\; -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for all files matching either pattern \"*.rb\" or pattern \"*.py\"","cmd":"find . -name \"*.rb\" -or -name \"*.py\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for all files matching regular expression \".*\\.rb$\"","cmd":"find . -regex \".*\\\\.rb$\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for all regular non-hidden files except *.o","cmd":"find .\/ -type f -name \"*\" -not -name \"*.o\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for files and directories whose names begin with \"pro\"","cmd":"find . -name pro\\*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for files containing \"bash\" in their names","cmd":"find . -name \"*bash*\" | xargs","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the current directory tree for files whose names contain \"TextForRename\"","cmd":"find .\/ -name \"*TextForRename*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for regular files that can be read by noone","cmd":"find -type f ! -perm -444","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","cmd":"find -type f -regex \".*\/.*\\.\\(shtml\\|css\\)\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","cmd":"find . -type f \\( -name \"*.shtml\" -o -name \"*.css\" \\) -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","cmd":"find . -type f | egrep '\\.(shtml|css)$'","cmdset":["egrep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Search the current directory tree for regular files whose names end with \"keep.${SUFFIX}\", where $SUFFIX is a shell variable","cmd":"find . -type f -name \"*keep.${SUFFIX}\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the current directory tree for symbolic links named \"link1\"","cmd":"find . -type l -name link1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the directory given as variable $d for empty subdirectories","cmd":"find \"$d\" -mindepth 1 -prune -empty","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the directory tree given as variable $dir for regular files","cmd":"find $dir -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.","cmd":"find \/ -fstype ext3 -name zsh*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the files from directory tree \"dirname\" for string \"foo\"","cmd":"find dirname  -print0 | xargs -0 grep foo","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"","cmd":"find . -name \"*bills*\" -print0 | xargs -0 grep put","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"","cmd":"find . -name '*bills*' -exec grep -H \"put\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the home directory tree for files matching pattern '*.txt'","cmd":"find ~ -name *.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the regular files of the current directory tree for string \"foo\"","cmd":"find .\/ -type f | xargs grep \"foo\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Search the system for directories named \"needle\"","cmd":"find \/ -type d -name \"needle\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Search the ~ and `Music' directory trees for .mp3 files","cmd":"find ~ Music -name '*.mp3'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Searches the manual page names and descriptions by 'disk' keyword.","cmd":"apropos disk","cmdset":["apropos"],"cmdcath":["HELPDOC"]}
{"invocation":"Send 4 ping requests to host \"google.comz\", displaying only the summary info after the last request completed.","cmd":"ping -c 4 -q google.comz","cmdset":["ping"],"cmdcath":["NET"]}
{"invocation":"Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.","cmd":"kill -9 18581 18582 18583","cmdset":["kill"],"cmdcath":["PROCCTRL"]}
{"invocation":"Send a single ping request with a TTL of 1 to \"192.168.1.1\"","cmd":"ping -c 1 -t 1 192.168.1.1","cmdset":["ping"],"cmdcath":["NET"]}
{"invocation":"Send at most 3 ping requests to \"8.8.8.8\" with a timeout of 3 seconds on interface \"eth9\"","cmd":"ping 8.8.8.8 -I eth9 -c 3 -w 3","cmdset":["ping"],"cmdcath":["NET"]}
{"invocation":"Set 444 permission to all regular files under current directory","cmd":"find . -type f -print | xargs chmod 444","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Set 644 permission to all regular files under current directory","cmd":"chmod 644 `find -type f`","cmdset":["find","chmod"],"cmdcath":["SECOP","FDOPS"]}
{"invocation":"Set 644 permission to all regular files under current directory","cmd":"find . -type f -exec chmod 644 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Set permission of all files in \"img\", \"js\", and \"html\" to 644","cmd":"chmod 644 img\/* js\/* html\/*","cmdset":["chmod"],"cmdcath":["SECOP"]}
{"invocation":"Set permissions to 500 for directories under the current directory","cmd":"find . -type d -exec chmod 500 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Set read, write and execute permission for all (owner, group, other) for the files\/directories in foldername directory tree","cmd":"sudo find foldername -exec chmod a+rwx {} \";\"","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"Set the bash prompt to \"username@hostname\"","cmd":"PS1=\"`whoami`@`hostname | sed 's\/\\..*\/\/'`\"","cmdset":["sed","hostname","whoami"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Set the group to \"username\" for all files with GID=1000 in the current directory tree","cmd":"find -gid 1000 -exec chown -h :username {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.","cmd":"set -e","cmdset":["set"],"cmdcath":["SHUTIL"]}
{"invocation":"Set the timestamp of B to the same one as A","cmd":"touch -r A B","cmdset":["touch"],"cmdcath":["FDOPS"]}
{"invocation":"Set the variable \"me\" to the name of the running script.","cmd":"me=`basename \"$0\"`","cmdset":["basename"],"cmdcath":["FDOPS"]}
{"invocation":"Set variable \"finalName\" to the second-to-last slash-separated path component of variable \"path\"","cmd":"finalName=$(basename -- \"$(dirname -- \"$path\")\")","cmdset":["basename","dirname"],"cmdcath":["FDOPS"]}
{"invocation":"Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.","cmd":"file=$( basename \"$1\" )","cmdset":["basename"],"cmdcath":["FDOPS"]}
{"invocation":"Set variable 'path' to name of current directory (without the containing directories).","cmd":"path=$(basename $(pwd))","cmdset":["basename","pwd"],"cmdcath":["FDOPS"]}
{"invocation":"Set variable 'vara' to 3","cmd":"source <(echo vara=3)","cmdset":["source"],"cmdcath":["PROGSCRIPT"]}
{"invocation":"Sets shell options 'globstar' and 'nullglob'.","cmd":"shopt -s globstar nullglob","cmdset":["shopt"],"cmdcath":["SYSINFO"]}
{"invocation":"Show a listing of files not modified in over 20 days or not accessed in over 40 days","cmd":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Show a long listing of files not modified in over 20 days or not accessed in over 40 days","cmd":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Show all files in user's home directory that have read, write and execute permissions set for user, group and others.","cmd":"find ~ -perm 777","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Show the epoch in default date\/time format","cmd":"date -ud@0","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"Show the list of files modified less than a minute ago","cmd":"find \/ -mmin -1 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Show the number of regular files in the current directory tree","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Silently read a single character from standard input into variable \"REPLY\" without backslash escapes, with a timeout of 5 seconds, and using the prompt $'Press any key or wait 5 seconds to continue...\\n'","cmd":"read -rsp $'Press any key or wait 5 seconds to continue...\\n' -n 1 -t 5","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Silently read a single character into variable \"REPLY\"","cmd":"read -n1 -s","cmdset":["read"],"cmdcath":["SHUTIL"]}
{"invocation":"Sort \"$file\" and output the result to \"$file\"","cmd":"sort -o $file $file","cmdset":["sort"],"cmdcath":["TXTPROC"]}
{"invocation":"Sort \"file1.txt\" and output the result to \"file1.txt\"","cmd":"sort -o file1.txt file1.txt","cmdset":["sort"],"cmdcath":["TXTPROC"]}
{"invocation":"Sort and compare files \"$def.out\" and \"$def-new.out\"","cmd":"diff <(sort $def.out) <(sort $def-new.out)","cmdset":["diff"],"cmdcath":["TXTPROC"]}
{"invocation":"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","cmd":"find \/ -type f -printf \"\\n%Ab %p\" | head -n 11 | sort -k1M","cmdset":["sort","head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Sort file.txt ignoring the last 10 characters of each line.","cmd":"sort file.txt | rev | uniq -f 10 | rev","cmdset":["sort","rev","uniq"],"cmdcath":["TXTPROC"]}
{"invocation":"Sort strings of 'test.txt' file by second from the end field","cmd":"rev   test.txt | sort  -k2 | rev","cmdset":["rev","sort"],"cmdcath":["TXTPROC"]}
{"invocation":"Split \"$in_file\" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file\"_\"","cmd":"awk '{if (NR!=1) {print}}' $in_file | split -d -a 5 -l 100000 - $in_file\"_\"","cmdset":["split","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Split \"${fspec}\" into 6 files with about equal number of lines each and use prefix \"xyzzy.\"","cmd":"split --number=l\/6 ${fspec} xyzzy.","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"\/usr\/bin\/cat\" into 10000 files of about equal size","cmd":"split -n 10000 \/usr\/bin\/cat","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"ADDRESSS_FILE\" into files containing at most 20 lines and prefix \"temp_file_\"","cmd":"split -l20 ADDRESSS_FILE temp_file_","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"INPUT_FILE_NAME\" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix \"input.part.\"","cmd":"split -b 500M -d -a 4 INPUT_FILE_NAME input.part.","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"bigfile\" into files of at most 1000 lines each with prefix \"\/lots\/of\/little\/files\/here\"","cmd":"split bigfile \/lots\/of\/little\/files\/here","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"file.txt\" into files of at most 1 MiB in size with a numeric suffix, prefix \"file\", and additional suffix \".txt\"","cmd":"split -b 1M -d  file.txt file --additional-suffix=.txt","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split \"input.txt\" into files with 1 line each and use a prefix \"output.\" and a suffix length of 5","cmd":"split --lines=1 --suffix-length=5 input.txt output.","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix \"temp_file_ and numeric suffixes","cmd":"split -l20 ADDRESSS_FILE temp_file_","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"Starts new tmux session, assuming the terminal supports 256 colours.","cmd":"tmux -2","cmdset":["tmux"],"cmdcath":["PROCCTRL"]}
{"invocation":"Synchronize \"\/home\/user1\/\" to \"wobgalaxy02:\/home\/user1\/\" including hidden files","cmd":"rsync -av \/home\/user1\/ wobgalaxy02:\/home\/user1\/","cmdset":["rsync"],"cmdcath":["NET"]}
{"invocation":"Take the section of variable \"FILE\" between the last slash and the following dot, if any, and store that section in variable \"NAME\".","cmd":"NAME=`basename \"$FILE\" | cut -d'.' -f-1`","cmdset":["basename","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Trim leading and trailing whitespace from variable 'var'.","cmd":"var=`echo $var | awk '{gsub(\/^ +| +$\/,\"\")}1'`","cmdset":["echo","awk"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"Unhide all hidden files in the current directory","cmd":"find . -maxdepth 1 -type f -name '\\.*' | sed -e 's,^\\.\/\\.,,' | sort | xargs -iname mv .name name","cmdset":["sed","sort","find","xargs"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"Unsets 'history' shell option.","cmd":"shopt -u -o history","cmdset":["shopt"],"cmdcath":["SYSINFO"]}
{"invocation":"Unzip all files matching \"test1\/*\/*.gz\"","cmd":"gunzip test1\/*\/*.gz","cmdset":["gunzip"],"cmdcath":["ARCH"]}
{"invocation":"Unzip all files that match \"*.gz\" in the current directory and subdirectories to stdout and search for \"test\"","cmd":"find . -name \"*.gz\" -exec zcat \"{}\" + |grep \"test\"","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"Unzip and expand tar archive \"compressFileName\"","cmd":"zcat compressFileName | tar xvf -","cmdset":["tar","zcat"],"cmdcath":["ARCH"]}
{"invocation":"Unzip and merge all \"small-*.gz\" files into files of 2000000 lines","cmd":"zcat small-*.gz | split -d -l2000000 -a 3 - large_","cmdset":["split","zcat"],"cmdcath":["SHUTIL","ARCH"]}
{"invocation":"Unzip and untar \"myarchive.tar.gz\" and check for corruption","cmd":"gunzip -c myarchive.tar.gz | tar -tvf -","cmdset":["gunzip","tar"],"cmdcath":["ARCH"]}
{"invocation":"Update the archive '2009.tar' with the files from the data\/ directory tree that match pattern 'filepattern-*2009*'","cmd":"find data\/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Update the archived copy of the home directory, \"alldata.tar\"","cmd":"find ~\/ -newer alldata.tar -exec tar uvf alldata.tar {} ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Update the timestamp of 'filename', or create an empty file if it doesn't exist.","cmd":"touch filename","cmdset":["touch"],"cmdcath":["FDOPS"]}
{"invocation":"Update timestamps of all files in entire filesystem which are not newer than \/tmp\/timestamp","cmd":"find \/ ! -newer \/tmp\/timestamp -exec touch {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.","cmd":"find . -perm 040 -type f -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"Verbosely change ownership of \"$file\" to \"root\"","cmd":"chown -v root \"$file\"","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"Verbosely compresses all files on sixth and seventh depth level keeping original files in place.","cmd":"bzip2 -kv *\/*\/*\/*\/*\/*\/*","cmdset":["bzip2"],"cmdcath":["ARCH"]}
{"invocation":"View history using \"vim\"","cmd":"history | vim -","cmdset":["vim","history"],"cmdcath":["SYSINFO","TXTPROC"]}
{"invocation":"Wrap each line in \"file.txt\" to fit in 80 characters","cmd":"cat file.txt | fold","cmdset":["cat","fold"],"cmdcath":["TXTPROC"]}
{"invocation":"Write \"\\n\/usr\/local\/boost_1_54_0\/stage\/lib\" to standard output and append to \"\/etc\/ld.so.conf\"","cmd":"echo -e \"\\n\/usr\/local\/boost_1_54_0\/stage\/lib\" | sudo tee -a \/etc\/ld.so.conf","cmdset":["echo","sudo"],"cmdcath":["SHUTIL","SECOP"]}
{"invocation":"Write output of \"ls -a\" to standard output and to \"output.file\"","cmd":"ls -a | tee output.file","cmdset":["tee","ls"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"Write the lines appended to \"xxxx\" as it appears to the console and append to \"yyyy\" in the background","cmd":"tail -F xxxx | tee -a yyyy &","cmdset":["tee","tail"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"change group of the file \/var\/lib\/php\/session  to group lighttpd","cmd":"chown -R :lighttpd \/var\/lib\/php\/session","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"change owner of the files into directory \"\/mydir\" with \".txt\" extension to user root","cmd":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the extension of all the \".abc\" files in the folder \"\/the\/path\" to \".edefg\" and do not change in the sub directories","cmd":"find \/the\/path -depth -name \"*.abc\" -exec rename 's\/\\.abc$\/.edefg\/' {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the owner of all the files in the current directory","cmd":"find . -exec chown myuser:a-common-group-name {} +","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file","cmd":"find -gid 1000 -exec chown -h :username {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the ownership of all regular\/normal files in the current directory","cmd":"find . -type f | xargs chown username","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"change the ownership of all the files in the file system from edwarda to earnestc","cmd":"find \/ -user edwarda -print | xargs chown earnestc","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"change the permission of all directories in current folder to 755.","cmd":"find . -type d -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the permission of all php files in current folder","cmd":"find . -name \"*.php\" -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the permission of all the regular files in the folder \/home to 700","cmd":"find \/home -type f -perm 0777 -print -exec chmod 700 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the permissions of all regular\/normal files in the file system","cmd":"chmod 640 `find .\/ -type f -print`","cmdset":["find","chmod"],"cmdcath":["SECOP","FDOPS"]}
{"invocation":"change the permissions of all the directories  to 775 in the current folder","cmd":"find . -type d -exec chmod 775 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"change the permissions of all the directories in the current folder","cmd":"find . -type d | xargs chmod 2775","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"change the permissions of all the regular\/normal files in the current folder","cmd":"chmod 640 `find .\/ -type f -print`","cmdset":["find","chmod"],"cmdcath":["SECOP","FDOPS"]}
{"invocation":"change the permissions of all the regular\/normal files in the folder \"\/path\/to\/someDirectory\" to 644","cmd":"sudo find \/path\/to\/someDirectory -type f -print0 | xargs -0 sudo chmod 644","cmdset":["sudo","xargs"],"cmdcath":["SHUTIL","SECOP"]}
{"invocation":"change the permissions of the directories from 777 to 755 in the folder \"\/var\/www\/html\"","cmd":"find \/var\/www\/html -type d -perm 777 -print -exec chmod 755 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"convert epoch second timestamp to date","cmd":"date -d @1278999698 +'%Y-%m-%d %H:%M:%S'","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"cope *.mp3 files to \/tmp\/MusicFiles","cmd":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"count all the regular files that are present in a directory","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"count lines of C or C++ or Obj-C code under the current directory","cmd":"find . \\( -name \"*.c\" -or -name \"*.cpp\" -or -name \"*.h\" -or -name \"*.m\" \\) -print0 | xargs -0 wc","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"count the lines of java code for all the java files in the current directory","cmd":"find . -name \"*.java\" -print0 | xargs -0 wc","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~)","cmd":"find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\) | cpio -pmd0 \/dest-dir","cmdset":["cpio","find"],"cmdcath":["FDOPS","ARCH"]}
{"invocation":"create a compressed archive \"filename.tar.gz\" with verbose output","cmd":"tar -cvzf filename.tar.gz folder","cmdset":["tar"],"cmdcath":["ARCH"]}
{"invocation":"create a symbolic link in current directory named \"environments\" to file \"..\/config\/environments\"","cmd":"ln -s \"..\/config\/environments\"","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"create a symbolic link named \"\/usr\/lib\/jvm\/default-java\" to file \"\/usr\/lib\/jvm\/java-7-oracle\"","cmd":"sudo ln -s \/usr\/lib\/jvm\/java-7-oracle \/usr\/lib\/jvm\/default-java","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"create a symbolic link named \"test\" to file \".bashrc\"","cmd":"ln -s .bashrc test","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"create a symbolic link with absolute path \"\/cygdrive\/c\/Program Files\" to file \"\/cygdrive\/c\/ProgramFiles\"","cmd":"ln -s \"\/cygdrive\/c\/Program Files\" \/cygdrive\/c\/ProgramFiles","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"create a tar.gz compress file with all the jpg files in the entire file system","cmd":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)","cmd":"find . -name '*.log' -mtime +3 -print0 | xargs -0 -P 4 bzip2","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"create an archive using 7zhelper.sh as a compress program","cmd":"tar -I 7zhelper.sh -cf OUTPUT_FILE.tar.7z paths_to_archive","cmdset":["tar"],"cmdcath":["ARCH"]}
{"invocation":"create directory aaa\/bbb","cmd":"mkdir aaa\/bbb","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"create directory dir1","cmd":"mkdir dir1","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"create directory public_html into home directory","cmd":"mkdir ~\/public_html","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"create directory tata","cmd":"mkdir tata","cmdset":["mkdir"],"cmdcath":["FDOPS"]}
{"invocation":"create the compressed tar archive images.tar.gz containing all jpg files found under \/","cmd":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"delete all empty files in the current directory ( empty file = size 0 bytes )","cmd":"find . -empty -exec rm '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all files in $DIR that have not been accessed in at least 5 days","cmd":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all text files in the home folder after user confirmation","cmd":"find $HOME\/. -name \"*.txt\" -ok rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all the files ending with \"~\" in current folder","cmd":"find -name '*~' -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all the files in the file system which belong to the user edwarda after user confirmation","cmd":"find \/ -user edwarda -ok rm \"{}\" \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all the mp3 files in the current folder.","cmd":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete all the regular files in the temp folder which have not been modified in the last 24 hours","cmd":"find \/tmp\/ -type f -mtime +1 -print0 | xargs -0 -n1 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"delete all the trace files (\".trc\") which have not been been accessed in the last 30*24 hours","cmd":"find \/dirpath \\( -name \\*.trc -a -mtime +30 \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"delete what was typed in the command line and run \"pwd\" when button \"\\e[24~\"","cmd":"bind '\"\\e[24~\":\"\\C-k \\C-upwd\\n\"'","cmdset":["bind"],"cmdcath":["SHUTIL"]}
{"invocation":"dispaly a long listig of all the files in the current folder which are bigger than 100KB","cmd":"find . -size +100000 -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours","cmd":"find \/ -size +1000 -mtime +30  -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display a long list of all the directories which have files ending with \".todo\"","cmd":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n' | uniq | xargs ls -l","cmdset":["find","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"display a long list of all the files in the directory \"\/mydir\" which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours","cmd":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display a long listing of all files in the entire file system which are bigger than 1MB","cmd":"find \/ -size +1000k -exec ls -l {} \\; -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display a long listing of all regular files  in current folder which have been modified in the last 60 minutes","cmd":"find . -mmin -60 -type f | xargs ls -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"display a long listing of all the empty files in the entire file system which are empty","cmd":"find \/ -type f -size 0 -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display a long listing of all the normal\/regular files in the current folder and do not search in the sub folders","cmd":"find . -maxdepth 1 -type f -exec ls -l {} \\; | less","cmdset":["find","less"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago","cmd":"find . -mmin 60 -print0 | xargs -0r ls -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"display all directories in the folder Symfony","cmd":"find Symfony -type d","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files ending with \"ini\" in current folder","cmd":"find . -type f -name '*.ini'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in current folder excluding current folder (.)","cmd":"find . \\! -name '.'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in current folder which have been modified in the last 60 minutes","cmd":"find -mmin 60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in the current folder ($@ contains the variables passed as argument to the function)","cmd":"find . -iname \"*$@*\" -or -iname \".*$@*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in the current folder expect text files","cmd":"find . -name \"*.txt\" -prune -o -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in the current folder which are not empty","cmd":"find . ! -size 0k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in the current folder which do not belong to the user john","cmd":"find . ! -user john","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all files in the folder \/usr and its sub directory(do not search beyond the sub directory)","cmd":"find \/usr -maxdepth 1 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all regular\/normal files in the current folder ending with the word ummy","cmd":"find -type f -name *ummy","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all regular\/normal files in the current folder which are not accessed in the last 7*24 hours","cmd":"find . -type f -atime +7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all regular\/normal files in the folder \/Users\/david\/Desktop\/","cmd":"find \/Users\/david\/Desktop\/-type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all scala files in the directory \"src\/main\"","cmd":"find . -type f -path \"*src\/main\/*\\.scala\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all text files in current folder","cmd":"find . -name \".txt\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the \".c\" files in the current folder excluding those that are present in all the sub directories","cmd":"find . \\( ! -name . -prune \\) -name \"*.c\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the \".c\" files in the folder \"\/home\/david\" which have been accessed in the last 48 hours","cmd":"find \/home\/david -atime -2 -name '*.c'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the .sh scripts and perl files in the current folder","cmd":"find . -type f \\( -name \"*.[sS][hH]\" -o -name \"*.[pP][lL]\" \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the directories in the current folder excluding those that have the name \"node_modules\"","cmd":"find . ! -name \"node_modules\" -type d","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the doc files in the current folder ( files ending with \".doc\" )","cmd":"find . -name '*.doc'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the file in the folder \/home\/david\/ which start with the word \"index\" ( case insensitive search)","cmd":"find \/home\/david -iname 'index*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files  in the current folder excluding the current folder and do not search in the sub directories","cmd":"find . -maxdepth 1 -type d \\( ! -name . \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files and directories with the name \"CVS\"  from \/usr\/src folder that are at least seven levels deep and do not descend onto the folders","cmd":"find \/usr\/src -name CVS -prune -o -depth +6 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files ending with \".user\" or beginning with \"admin\" or ending with \".user.gz\" in \/var\/adm\/logs\/morelogs\/ and excluding  all regular files","cmd":"find \/var\/adm\/logs\/morelogs\/* -type f -prune \\( -name \"admin.*\" -o -name \"*.user\" -o -name \"*.user.gz\" \\) -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files ending with .c in the current folder","cmd":"find . -name \\*.c -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current directory excluding those that are in the 'secret' directory","cmd":"find . -name 'secret' -prune -o -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder along with the modification time and display file names of the last 10 modified files","cmd":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \"","cmdset":["sort","find","tail","cut"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display all the files in the current folder excluding those that are present in the path \".\/etc\"","cmd":"find . ! -wholename \".\/etc*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder in a single line separated by null command","cmd":"sudo find . -print0","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"display all the files in the current folder which end with \".bash\"","cmd":"find . -name \"*.bash\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder which have been modified after the files \"\/bin\/sh\"","cmd":"find . -newer \/bin\/sh","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder which have been modified in one hour ago","cmd":"find .  -newermt \"1 hour ago\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder which have been modified in the last 2 days","cmd":"find . -mtime -2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the current folder which have been modified in the last 24 hours","cmd":"find . -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the folder \/home which do not belong to the group test","cmd":"find \/home ! -group test","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours","cmd":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files in the usr folder which have been modified after Feburary 1st","cmd":"find \/usr -newermt \"Feb 1\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the files only in the path \".\/sr*sc\"","cmd":"find . -path \".\/sr*sc\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the html files in the current folder","cmd":"find . -name \"*.html\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the html files in the current folder excluding search in the path .\/foo","cmd":"find . -path \".\/foo\" -prune -o -type f -name \"*.html\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the jpg files in the current folder which belong to the user nobody","cmd":"find . -name *.jpg -user nobody","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the jpg images in current folder","cmd":"find . -type f -iregex '.*\\.jpe?g'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the normal\/regular files in a directory","cmd":"find $dir -type f -name $name -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the normal\/regular files in the directory FOLDER1","cmd":"find FOLDER1 -type f -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the regular files in current folder excluding all the directories and all the sub directories having \"normal\" in their name","cmd":"find . \\( \\( -path \"\\.?.*\" -type d \\) -o -path \"*normal*\" \\) -prune -o \\( -type f \\) -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the regular files in the current folder and do not search in sub folders","cmd":"find \"$dir\" -maxdepth 1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the regular files in the current folder that are exactly 10KB","cmd":"find . -type f -size 10k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the regular\/normal files in the current directory which are atleast 2 levels deep","cmd":"find . -mindepth 2 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the regular\/normal files in the folder \/path\/ which have not been modified today ( from day start ie, 00:00 )","cmd":"find \/path\/ -type f -daystart -mtime +0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the symbolic links in the current folder","cmd":"find .\/ -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display all the text files in current folder","cmd":"find . -name \"*.txt\" -printf \"%f\\n\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display list of all the C files ( fuiles with \".c\" extension ) in current folder","cmd":"find . -name '*.c' -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display list of all the hidden files in the home folder","cmd":"find $HOME -name \".*\" -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display long listing of all regular\/normal files whose size is less than 50 bytes.","cmd":"find \/usr\/bin -type f -size -50c -exec ls -l '{}' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00","cmd":"find . -daystart -ctime 4 -ls -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display only the file names of all the files which end with \".deb\"","cmd":"find . -name '*.deb' -printf \"%f\\n\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display the amount of disk space used by all the log files in the folder \/usr\/local\/apache\/logs\/","cmd":"find \/usr\/local\/apache\/logs\/ -type f -name \"*_log\"|xargs du -csh","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"display the count of all normal\/regular files in current directory","cmd":"find . -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display the count of all the directories present in a folder","cmd":"find \/mount\/point -type d | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display the count of number html files in the current folder","cmd":"find . -name \"*.html\" -print | xargs -l -i wc {}","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"display the count of total number of text files in the folder \/home\/you which have been modified in the last 60*24 hours","cmd":"find \/home\/you -iname \"*.txt\" -mtime -60 | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display the directory name along with the modified time  for all the files \/var","cmd":"find \/var -maxdepth 2 -type d -printf \"%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\\n\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display the filenames which do not have begin with dot (.)","cmd":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"display the name and size of all the regular\/normal files  in the var\/log folder which are bigger than 100MB","cmd":"find \/var\/log -type f -size +100000k -exec ls -lh {} \\; | awk '{ print $9 \": \" $5 }'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"display the number of lines in all the \".c\" files in the current folder","cmd":"find . -name \"*.c\" -print | xargs wc -l","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"download contents of a website \"https:\/\/get.scoop.sh\"","cmd":"curl -L https:\/\/get.scoop.sh","cmdset":["curl"],"cmdcath":["NET"]}
{"invocation":"file all the Sticky Bit set files whose permission are 551","cmd":"find \/ -perm 1551","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find  files which full path name is \/tmpfoo\/bar under \/tmp\/foo directory and print","cmd":"find \/tmp\/foo -path \/tmp\/foo\/bar -print \/tmp\/foo\/bar","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find *.gif files under the currently directory and sub-directories and list them using the ls command","cmd":"find . -name *.gif -exec ls {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find a.out, *.o and core files under the current directory and sub-directories and delete them.","cmd":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all *.java files\/directories under current directory","cmd":"find . -name  \\*.java","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all c, cpp files in current folder","cmd":"find -regex '.*\\.\\(c\\|cpp\\)'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension","cmd":"find . -name \"*.dat\" -type f -cmin +60 | grep \"^.\/[^\/]\\+dat\" | sed \"s\/^.\\\/\/\/\"","cmdset":["sed","grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all directories in the current directory","cmd":"find . -type d -name \"*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all directories with the name test in a directory","cmd":"find \/home\/john -type d -name test -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB","cmd":"find . -atime +7 -size +20480 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files beneath the current directory that begin with the letters 'Foo' and delete them.","cmd":"find . -type f -name \"Foo*\" -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files ending with \"js.compiled\" in current folder (print0 is used to handle files with newlines in their names)","cmd":"find .\/js\/ -name \"*.js.compiled\" -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in current folder which are bigger than 1 MB and move them to another folder","cmd":"find . -size +1M -exec mv {} files \\+","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in current folder which are bigger than 1MB","cmd":"find .\/ -size +1000k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in current folder which are more than 300MB","cmd":"find . -size +300M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the current directory excluding those that end with .js or have the words .min or console in their name","cmd":"find . -type f \\( -name \"*.js\" ! -name \"*-min*\" ! -name \"*console*\" \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the current folder that are not modified in the last 10 minutes","cmd":"find . -mmin +10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the current folder that are not modified in the last 240 hours","cmd":"find . -mtime +10 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the current folder which start with pro","cmd":"find . -name pro\\*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the entire file system whose size is more than 100MB","cmd":"find \/ -size +100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the file system which belong to no user or which have no user","cmd":"find \/ -nouser","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files in the file system which have not been accessed in the last 2 days","cmd":"find \/ -atime +2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files starting with capital letter in the current folder","cmd":"find . -name \"[A-Z]*\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files that names are filename and open in nano text editor","cmd":"find \/ -name filename -exec  nano '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files that names are game","cmd":"find \/ -name game","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files that were modified between 90 to 100 days ago in home directory and delete then .","cmd":"find \/home -type f -mtime +90 -mtime -100  -exec rm  {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all files under the current folder except dir1 dir2 dir3  folder","cmd":"find . -type d \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -o -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all headers file *.h in \/nas\/projects directory","cmd":"find \/nas\/projects -name \"*.h\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all java files in the current folder and search for the pattern REGEX","cmd":"find . -name '*.java' -exec grep REGEX {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all jpg files in the folder which are in the path \"\/201111\/\" and sort them based on name","cmd":"find *\/201111\/* -name \"*.jpg\" | sort -t '_' -nk2","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all js files which path does not contain .\/node_modules\/* nor '.\/vendor\/*\"","cmd":"find -name '*.js' -not -path '.\/node_modules\/*' -not -path '.\/vendor\/*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all php files in the folder  \/var\/www\/","cmd":"find \/var\/www\/ -type f -iname \"*.php\" -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all read me files in a folder","cmd":"find \/usr\/share\/doc -name README","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all readme files in a folder","cmd":"find \/usr\/share\/doc -name README","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all regex  \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\" files","cmd":"find . -regextype sed -regex \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all regex  '\\.\/[a-f0-9\\-]\\{36\\}\\.jpg' files","cmd":"find . -regex '\\.\/[a-f0-9\\-]\\{36\\}\\.jpg'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all regex \".\/[a-f0-9\\-]\\{36\\}\\.jpg\" files","cmd":"find . -regex \".\/[a-f0-9\\-]\\{36\\}\\.jpg\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all regular file and create jw-htmlfiles.tar","cmd":"find . -type f -name \"*html\" | xargs tar cvf jw-htmlfiles.tar -","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has","cmd":"find .  \\( ! -path \".\/output\/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all regular\/normal files in current folder which have been modified in the last 60 minutes","cmd":"find -type f -mtime -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all symbolic links in the current folder","cmd":"find -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all symbolic links under \/usr","cmd":"find \/usr -type l","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all text files in the folder \"FFF\" and find the md5sum for them","cmd":"find FFF -name \"*.txt\" -exec md5sum '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all text files which have extra extensions in the current folder","cmd":"find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the \".JPG\" files in current folder and display their count","cmd":"find .\/ -name '*.JPG' -type f | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the \".c\" files in the folder \/home\/david which have been modified in the last 48 hours","cmd":"find \/home\/david -mtime -2 -name '*.c'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the backup files in the current folder and delete them","cmd":"find . -type f -name \"*.bak\" -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the css files","cmd":"find -name '*.css'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"\/p\/\".","cmd":"find -mindepth 3 -type d ! -path '*\/p\/*' -name c -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the directories in the current folder which have been modified in 24 hours and move them to the folder  \/path\/to\/target-dir","cmd":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all the directories with the name \"DIRNAME\" in the current folder and force delete them","cmd":"find . -type d -name \"DIRNAME\" -exec rm -rf {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the file which name end with c or h and content contain 'thing'","cmd":"find . -name '*.[ch]' | xargs grep -l thing","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all the files and folder that were created in 2012 on Friday of every month","cmd":"find \/ -daystart -mtime +41 -mtime -408 \\   -printf \"%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h\/%f\\n\" | awk '($7==\"Fri\"){print}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the files ending with \".foo\" in the folder \/usr","cmd":"find \/usr -name '*.foo' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files ending with undo in the current folder and calculate the total size of these files","cmd":"find . -name \"*.undo\" -ls | awk '{total += $7} END {print total}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the files from root folder which have nogroup or noname and dispaly their details.","cmd":"find \/ \\( -nogroup -o -noname \\) -ls","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in current folder ending with \"ini\" and search for a word in all these files","cmd":"find . -name *.ini -exec grep -w PROJECT_A {} \\; -print | grep ini","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the files in the current directory and change the permissions to 775.","cmd":"find . -exec chmod 775 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current directory and sub-directories whose status was changed after \/etc\/fstab was modified","cmd":"find -cnewer \/etc\/fstab","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current directory that have the word \"lib\" in them","cmd":"find . -wholename '\/lib*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current directory which end with orig","cmd":"find . -name '*.orig'  -exec echo {} \\ ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current folder which are modified after \/bin\/sh.","cmd":"find . -newer \/bin\/sh","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current folder which have been modified after the file disk.log","cmd":"find . -newer disk.log -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files","cmd":"find . -mindepth 1 -mmin -60 | xargs -r ls -ld","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all the files in the current folder which have been modified in the last one minute","cmd":"find . -type f -mmin 0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current folder which have the name net or comm in them","cmd":"find . -regex '.*\\(net\\|comm\\).*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.","cmd":"find . -name 'cache*' -depth -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the entire file system that have been accessed exactly  50 days ago","cmd":"find \/ -atime 50","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the entire file system that have been accessed in the last 60 days ago","cmd":"find \/ -amin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the entire file system whose size is greater than 20MB","cmd":"find \/ -type f -size +20000k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the entire filesystem which belong to the group root and display the ten files.","cmd":"find \/ -group root | head","cmdset":["head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the files in the file system which have been modified in the last 60 minutes","cmd":"find \/ -mmin -60","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the file system which have not been modified in the last 100*24 hours","cmd":"find \/ -mtime +100 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the file system which have read permission to the user and display the ten files","cmd":"find \/ -perm \/u=r | head","cmdset":["head","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the files in the file system which have sticky bit enabled to the user","cmd":"find \/ -perm -u+s","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the folder \"\/mp3-collection\" which are bigger than 10MB excluding those that start with the word Metallica","cmd":"find \/mp3-collection -size +10000k ! -name \"Metallica*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the folder .\/machbook and change the owner of them to the user with id \"184\"","cmd":"find .\/machbook -exec chown 184 {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the folder \/opt which have been modified exactly 20 days ago","cmd":"find \/opt -mtime 20","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the home folder that are modified day before yesterday","cmd":"find $HOME -mtime -2 -mtime +1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the home folder that have been modified between 24 to 48 hours","cmd":"find $HOME -mtime -2 -mtime +1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the home folder which are bigger than 2MB and zip them","cmd":"find ~ -size +2000000c -regex '.*[^gz]' -exec gzip '{}' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files in the home folder which have been modified after a file","cmd":"find $HOME -newer ~joeuser\/lastbatch.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that are not modified in the last 7 days","cmd":"find -daystart -mtime +7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been changed exactly 24 hours ago","cmd":"find . -ctime 1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been changed today","cmd":"find . -ctime 0 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified exactly 2 days ago","cmd":"find -mtime 2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified in exactly 7*24 hours ago","cmd":"find . -mtime 7","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified in the last 1 day","cmd":"find . -type f -daystart -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified in the last 2 days","cmd":"find . -type f -daystart -mtime -2","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.","cmd":"find . -mtime 4 -daystart -exec cp -a {} \/home\/devnet\/fileshare\\$ on\\ X.X.X.X\/RECOVER\/ \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that have been modified in the last 7 days,","cmd":"find . -mtime -7 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files that were modified two days ago","cmd":"find . -daystart -ctime 1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files which have been changed after the modification of a file.","cmd":"find -cnewer \/etc\/fstab","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the files with the name \"datainame\" in the file system which are bigger than 50MB","cmd":"find \/ -size +50M -iname \"Dateiname\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the jpg files in current folder and sort them","cmd":"find . -type f|grep -i \"\\.jpg$\" |sort","cmdset":["sort","grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.","cmd":"find $HOME -type f -atime +30 -size 100k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the normal\/regular files in current folder and search for a pattern","cmd":"find . -type f -print0 | xargs -0 grep pattern","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find all the normal\/regular files in the current directory which have been modified in the last 24 hours","cmd":"find . -mtime -1 -type f -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the php files in current folder using regular expressions","cmd":"find . -regex '.+\\.php'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the png files in current folder which are present in the pattern list file \"search.txt\"","cmd":"find . -name '*.png' | grep -f <(sed 's?.*?\/[0-9]_[0-9]_[0-9]_&_?' search.txt)","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the png files in current folder which are present in the pattern list file \"search.txt\"","cmd":"find . -name '*.png' | grep -f <(sed s\/^\/[0-9]_[0-9]_[0-9]_\/ search.txt)","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files","cmd":"find . -type f -ctime -3 | tail -n 5","cmdset":["find","tail"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find all the regular files in the current directory which do not have a read permission","cmd":"find -type f ! -perm -444","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the regular\/normal files in the \/path folder and delete them","cmd":"find \/path -type f -exec rm '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the shell scripts or perl files in the current directory","cmd":"find . -type f \\( -name \"*.sh\" -o -name \"*.pl\" \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the text files in the current folder starting with \"somefiles-\"  and prepend the first line","cmd":"find . -name \"somefiles-*-.txt\" -type f -exec sed -i 'iText that gets prepended (dont remove the i)' -- '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the text files in the file system and search only in the disk partition of the root.","cmd":"find \/ -mount -name \"*.txt\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the text files present in the current directory excluding the search in certain paths.","cmd":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find all the wav files in the current folder and do not search in the sub directories","cmd":"find . -name '*.wav' -maxdepth 1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find directories in the folder \/usr\/spool\/uucp","cmd":"find \/usr\/spool\/uucp -type d -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find file named foo.txt under root \/ directory.","cmd":"find \/ -name foo.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find files changed in the last 1 day","cmd":"find . -mtime -1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find files in \/dir\/path\/look\/up directory that names are dir-name-here","cmd":"find \/dir\/path\/look\/up -name \"dir-name-here\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find files in \/usr directory which are modified after February 1 of the current year","cmd":"find \/usr -newermt \"Feb 1\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find files in current folder using name patterns and sort the display the file names in the sorted order","cmd":"find . -name \"S1A*1S*SAFE\" | rev | awk -F '\/' '{print $1}' | rev | sort -t _ -k 5","cmdset":["rev","sort","find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"find files in root directory that names are game","cmd":"find \/ -name game","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find files in the current directory with pattern` '*.[ch]' which are contain 'thing' string and print file names","cmd":"find . -name '*.[ch]' | xargs grep -l thing","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"find for the word \"dba_2pc_pending\" in all the files of current fodler having the word \"sql\" in their name","cmd":"find . -print|grep sql|xargs grep -i dba_2pc_pending","cmdset":["xargs","grep","find"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"find in $HOME files ending in \"txt\" and do nothing with them, or files ending in \"html\" and list them null separated.","cmd":"find $HOME -name \\*txt -o -name \\*html -print0","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find in the file system for the directories with the name \"httpdocs\"","cmd":"find \/ -type d -name 'httpdocs'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find md5sum of 'string to be hashed'","cmd":"md5 -s 'string to be hashed'","cmdset":["md5"],"cmdcath":["SHUTIL"]}
{"invocation":"find out what group a given user has","cmd":"groups user","cmdset":["groups"],"cmdcath":["SYSINFO"]}
{"invocation":"find the file \"foo.txt\" in the current folder and assign the output to a variable","cmd":"OUTPUT=`find . -name foo.txt`","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find the file \"myfile.txt\" in the folder \/home\/user\/myusername\/","cmd":"find \/home\/user\/myusername\/ -name myfile.txt -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"find the file with the name \"esxcfg-firewall\" in the current folder","cmd":"find -print | grep esxcfg-firewall","cmdset":["grep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"force delete all the core files in the home folder","cmd":"find $HOME -name core -exec rm -f {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"forcibly and verbosely create a symbolic link named \"target\" to file \"source\"","cmd":"ln -sfvn source target","cmdset":["ln"],"cmdcath":["FDOPS"]}
{"invocation":"get the count of all the files that have been accessed in the last 30 days","cmd":"find . -atime +30 -exec ls \\; | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"get year-month-day from date","cmd":"date +%Y-%m-%d","cmdset":["date"],"cmdcath":["SYSINFO"]}
{"invocation":"kill all active jobs","cmd":"jobs -p | xargs kill -9","cmdset":["xargs","jobs"],"cmdcath":["SHUTIL","PROCCTRL"]}
{"invocation":"kill all jobs","cmd":"kill $(jobs -p)","cmdset":["kill","jobs"],"cmdcath":["PROCCTRL"]}
{"invocation":"list all CSS files under the current directory","cmd":"find . -type f -name \"*.css\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list all samba files in \/var\/l* directory ( \/var\/lib or \/var\/log )","cmd":"find  \/var -path *\/l??\/samba*","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list all the \".ksh\" files in the current directory","cmd":"find . -ls -name \"*.ksh\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list any files modified since \/bin\/sh was last modified","cmd":"find . -newer \/bin\/sh","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list files in \/usr modified after February 1 of the current year","cmd":"find \/usr -newermt \"Feb 1\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list names of bind functions containing \"\/\"","cmd":"bind -l | grep \/","cmdset":["bind","grep"],"cmdcath":["SHUTIL","TXTPROC"]}
{"invocation":"list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.","cmd":"find $HOME -type f -atime +30 -size 100k","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"list symbolic links under the directory \"$directory\" using contents of the $IFS variable between output of each one","cmd":"find $directory -type l -printf \"%p$IFS\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"login as user postgres","cmd":"sudo su -l oracle","cmdset":["sudo"],"cmdcath":["SECOP"]}
{"invocation":"long list al the files in the current directory which have all the permissions","cmd":"find . -perm 777 -type f -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"long list al the files in the current directory which have only read permission to the group","cmd":"find . -perm 040 -type f -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"long list all the files in the curent folder starting with \"Tes\"","cmd":"find . -type f -name \"Tes*\" -exec ls -l {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"long list the detials of all the shell scripts in current directory","cmd":"find . -name \"*.sh\" -exec ls -ld {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"move all the files in the current folder  to temp folder and search atleast in one subfolder","cmd":"find . -mindepth 1 -print0|xargs -0 -I, mv , \/tmp","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"print disk usage of files or folders in current directory","cmd":"du -sh *","cmdset":["du"],"cmdcath":["SYSINFO"]}
{"invocation":"print the last word in a.txt","cmd":"tac a.txt | awk 'NF{print $NF; exit}'","cmdset":["awk","tac"],"cmdcath":["TXTPROC"]}
{"invocation":"prune all the files in the current directory, only current directory (.) is the output","cmd":"find . -prune","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"recursively change owner and group of the directory \/your\/directory\/to\/fuel\/ and all files into it to user and group nginx","cmd":"chown nginx:nginx \/your\/directory\/to\/fuel\/ -R","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"recursively change owner and group of the directory and all files into it to user \"user\" and group \"www-data\"","cmd":"chown -R user:www-data yourprojectfoldername","cmdset":["chown"],"cmdcath":["SECOP"]}
{"invocation":"recursively change owner of the directory \/usr\/lib\/node_modules\/ to the current user","cmd":"sudo chown -R $(whoami) \/usr\/lib\/node_modules\/","cmdset":["sudo","whoami"],"cmdcath":["SYSINFO","SECOP"]}
{"invocation":"remove all \"Foo*\" files under current dir","cmd":"find . -type f -name \"Foo*\" -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names","cmd":"find -name \"*.txt\" -print0 | xargs -0 rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"remove all the files in the current folder which have not been modified in the last 10 days","cmd":"find . -mtime +10 | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"remove all the files in the folder \"myfiiles\" which have not been accessed in the last 30*24 hours","cmd":"find \/myfiles -atime +30 -exec rm {} ;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.","cmd":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"remove all the regular\/normal files in the temp folder and do not delete in the sub folders","cmd":"find \/tmp -maxdepth 1 -type f -delete","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"replace the word apple with orange in all the files in the current folder","cmd":"find .\/ -exec sed -i 's\/apple\/orange\/g' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"return every file that does not have bar somewhere in its full pathname","cmd":"find . ! -path '*bar*' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"returns a list of  files modification newer than poop","cmd":"find . -mnewer poop","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"reverse both words and lines in file","cmd":"tac filename | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); printf(\"%s\\n\",$1)}'","cmdset":["awk","tac"],"cmdcath":["TXTPROC"]}
{"invocation":"search  all block spacial files called backup from \/usr directory downwards and print them .","cmd":"find \/usr -type b -name backup -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search  in current directory downwards all files whose status has changed more then 7  days ago","cmd":"find .  -ctime +7 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search all jpg,png,jpefg  files in the current folder and calculate the total size of them","cmd":"find . \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" \\) -ls | awk '{total += $7} END {print total}'","cmdset":["find","awk"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search all the \".sh\" files in the \/usr folder and follow the symbolic links to their original file","cmd":"find \/usr -follow -name '*.sh'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search all the files in the folder \"myfiles\" which have the word \"blue\" in their name","cmd":"find \/myfiles -name '*blue*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search files in the folder \/home which have been modified after \/tmp\/after and before \/tmp\/before","cmd":"find \/home\/ -type f -newer \/tmp\/after -not -newer \/tmp\/before","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for a file \"file\" in current folder and display all instances of this file","cmd":"find -name file -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for a shell script in the current folder and display the current folder path","cmd":"find . -name onlyme.sh -exec pwd \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for a word in all files in a directory","cmd":"find \/directory\/containing\/files -type f -print0 | xargs -0 grep \"test to search\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for a word in all the .C files in the current directory","cmd":"find . -name \"*.c\" -exec grep -ir \"keyword\" {} \";\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for a word in all the normal\/regular files in the current folder","cmd":"find . -type f | xargs grep \"text\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for a word in all the php files in the current folder and display the count of all matching lines.","cmd":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\; | wc -l","cmdset":["wc","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search for al cpp files in current folder and display unique parent directory of these files in sorted order","cmd":"find . -name \"*.cpp\" -exec dirname {} \\; | sort -u","cmdset":["sort","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order","cmd":"find . -name '*.cpp' | sed -e 's\/\\\/[^\/]*$\/\/' | sort | uniq","cmdset":["sed","sort","find","uniq"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search for all Scala files under the current directory that contain the string null","cmd":"find . -type f -name \"*.scala\" -exec grep -B5 -A10 'null' {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the files ending with \"fits\" in the folder \"\/store\/01\"","cmd":"find \/store\/01 -name \"*.fits\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the files in the current directory which have been modified in the last 24 hours.","cmd":"find . -mtime -1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the files in the current directory which have the name a.out or core or which end with .o and delete them.","cmd":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the files in the current folder which are bigger than 10KB and display them biggest file","cmd":"find . -size +10k -exec ls -ls {} \\+ | sort -n | tail -1","cmdset":["sort","find","tail"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.","cmd":"var=\"$(find . -name 'gen*.bt2')\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them","cmd":"find . -mtime +180 -exec du -sh {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the log files in the folder \/apps which have not been modified in the last 60 days and which are present in the same file system as that of \/apps and delete them","cmd":"find \/apps -xdev -name \"*.log\" -type f -mtime +60 | xargs rm","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for all the mp3 files in the folder \/home\/you which have been accessed 24 ago","cmd":"find \/home\/you -iname \"*.mp3\" -atime 01 -type -f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.","cmd":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the rpm files in the file system which reside in the same partition as that of the root","cmd":"find \/ -xdev -name \"*.rpm\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for all the text files and display the long listing of these files from that directory","cmd":"find . -name \"*.txt\" -execdir ls -la {} \";\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for directories in the folder \"test\" which end have 5 digits as their name","cmd":"find .\/test -type d -name '[0-9][0-9][0-9][0-9][0-9]'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for files in the current folder which start with \"myfile\" ( case insensitive search )","cmd":"find . -iname 'MyFile*'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for files named \"WSFY321.c\" in a case-insensitive manner","cmd":"find . -iname \"WSFY321.c\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for pattern matched files in the current folder and subfolders exclude \"excluded path\"","cmd":"find .\/ -type f -name \"pattern\" ! -path \"excluded path\" ! -path \"excluded path\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for soft links in current folder and display those links which are not pointed to files in current folder","cmd":"find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"","cmdset":["grep","find","readlink"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"search for text files in the current folder which have write access to others","cmd":"find . -type f \\( -iname \"*.txt\" -and -perm -o=w \\)","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the directory \"config\" in the current folder and change directory to the first instance of the search","cmd":"cd $(find . -name config -type d | sed 1q)","cmdset":["sed","cd","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"search for the directory starting with \"ora10\" in the entire file system","cmd":"find \/ -type d -name \"ora10*\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file \"file1\" in the entire file system","cmd":"find \/ -name file1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file \"foo.txt\" in the entire file system","cmd":"find \/ -name foo.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file \"foobar.txt\" in the folder \"\/home\/mywebsite\"","cmd":"find \/home\/mywebsite -type f -name \"foobar.txt\"","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file \"job.history\" in the folder \/data\/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","cmd":"find \/data\/SpoolIn -name job.history | xargs grep -o -m 1 -h 'FAIL\\|ABOR' | sort | uniq -c","cmdset":["sort","find","xargs","uniq"],"cmdcath":["SHUTIL","TXTPROC","FDOPS"]}
{"invocation":"search for the file \"myletter.doc\" in the home folder","cmd":"find ~ -name myletter.doc -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file \"process.txt\" in the entire file system (case insensitive search)","cmd":"find \/ -iname 'process.txt' -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file centos in \/usr folder ( case insenstive search )","cmd":"find \/usr -iname centos","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file chapter1 in the folder \/work","cmd":"find \/work -name chapter1","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the file foo.txt in the entire file system","cmd":"find \/ -name foo.txt","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the word \"nameserver\" in all the configuration files of the \/etc folder","cmd":"find \/etc\/ -type f -name \"*.conf\" -print0 | xargs -I {} -0 grep \"nameserver\" \"{}\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for the word \"put\" in all the files in the current folder which have the word \"bills\" in their name and display the matched line along with the filename.","cmd":"find . -name '*bills*' -exec grep -H \"put\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for the word \"search-pattern\" in all the regular\/normal files in the current folder and display the matched file name","cmd":"find . -type f | xargs grep -l \"search-pattern\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for the word echo all the bash files(files ending with .bash) in the current folder","cmd":"find . -name \"*.bash\" |xargs grep \"echo\"","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"search for the word foo in all the js files in the current folder","cmd":"find . -name \"*.js\" -exec grep -iH foo {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search for version in system.info files.","cmd":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/modules\/system\/system.info\" -exec grep -H \"version = \\\"\" {} \\;","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search in current directory downwards all files whose size is less then 10 bytes","cmd":"find .  -size -10c -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search in the current directory for any file named Chapter1.txt","cmd":"find . -name Chapter1 -type f","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"search the pattern ^PyErr in all the \".c\" files in the folder Lib\/","cmd":"find Lib\/ -name '*.c' -print0 | xargs -0 grep ^PyErr","cmdset":["find","xargs"],"cmdcath":["SHUTIL","FDOPS"]}
{"invocation":"set variable r to currently running kernel release, ie. 4.4.0-81-generic","cmd":"r=\"$(uname -r)\"","cmdset":["uname"],"cmdcath":["SYSINFO"]}
{"invocation":"show all directories in the current folder excluding those that are present only in the paths .\/media, .\/images and .\/backups","cmd":"find . -path '.\/media' -prune -o -path '.\/images' -prune -o -path '.\/backups' -prune -o -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"show all files in \/usr\/tom and display only files ending with \".pl\" or \".pm\"","cmd":"find \/usr\/tom | egrep '*.pl| *.pm'","cmdset":["egrep","find"],"cmdcath":["TXTPROC","FDOPS"]}
{"invocation":"show all the \".flac\" files in the current folder and do not search in the sub directories","cmd":"find . -maxdepth 1 -type f -name '*.flac'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"show all the files in the entire file system which are bigger than 100MB","cmd":"find \/ -size +100M","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"show the list of all the files in the current folder which have been modified within the 24 hours","cmd":"find . -mtime 0 -print","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"simulate a full login of user builder","cmd":"su -l builder","cmdset":["su"],"cmdcath":["SECOP"]}
{"invocation":"sleep for 500 seconds","cmd":"sleep 500","cmdset":["sleep"],"cmdcath":["PROCCTRL"]}
{"invocation":"sort each file in the bills directory, leaving the output in that file name with .sorted appended","cmd":"find bills -type f -execdir sort -o '{}.sorted' '{}' ';'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"split file \"${fspec} into pieces named as \"xyzzyNNN\" with numeric prefix from 1 to 6","cmd":"split --number=l\/6 ${fspec} xyzzy.","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"split file input.txt into pieces per 1 line named output.NNNNN","cmd":"split --lines=1 --suffix-length=5 input.txt output.","cmdset":["split"],"cmdcath":["SHUTIL"]}
{"invocation":"ssh into \"ssh.myhost.net\" as user \"myusername\" and run command \"mkdir -p $2\"","cmd":"ssh myusername@ssh.myhost.net \"mkdir -p $2\"","cmdset":["ssh"],"cmdcath":["NET"]}
{"invocation":"use regex with find command","cmd":"find . -regextype posix-egrep -regex '\\.\/[a-f0-9\\-]{36}\\.jpg'","cmdset":["find"],"cmdcath":["FDOPS"]}
{"invocation":"use regex with find command","cmd":"find . -regextype sed -regex \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\"","cmdset":["find"],"cmdcath":["FDOPS"]}
